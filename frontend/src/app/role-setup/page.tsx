/**
 * ๐ญ ุตูุญุฉ ุงุฎุชูุงุฑ ุงูุฏูุฑ - Depth Studio Frontend
 * =============================================
 * 
 * ๐ ูุญุฏุซ: ููููู 2025
 * ๐จโ๐ป ุงููุทูุฑ: ุนูู ุฌูุฏุช
 * ๐ฏ ุงููุฏู: ุตูุญุฉ ุชูุงุนููุฉ ูุงุฎุชูุงุฑ ุงูุฏูุฑ ุงูููุงุณุจ ูููุณุชุฎุฏู
 * 
 * ๐ญ ุงูุฃุฏูุงุฑ ุงููุฏุนููุฉ:
 * - ูุตูุฑ (photographer) - ูุน ุงุฎุชูุงุฑ ููุน ุงูุนูุฏ ูุงูุชุฎุตุตุงุช
 * - ููุณู ุงูุจุฑุงูุฏ (brand_coordinator) - ูุน ุงุฎุชูุงุฑ ุงูุจุฑุงูุฏ
 * - ููุณู ุงูุชุณููู (marketing_coordinator) - ูุน ุจูุงูุงุช ุชูุตูููุฉ
 * 
 * ๐ ุงููููุฒุงุช ุงูุฑุฆูุณูุฉ:
 * - ููุงุฐุฌ ุฏููุงููููุฉ ุชุชุบูุฑ ุญุณุจ ุงูุฏูุฑ ุงููุฎุชุงุฑ
 * - validation ุดุงูู ููุจูุงูุงุช ุงููุฏุฎูุฉ
 * - ุงุฎุชูุงุฑ ุงูุจุฑุงูุฏุงุช ูุน ุงูุจุญุซ ููููุณููู
 * - ุนุฑุถ ุฃููุงุน ุงูุนููุฏ ูููุตูุฑูู
 * - ุงูุชูุฌูู ุงูุชููุงุฆู ูุตูุญุฉ ุงูุงูุชุธุงุฑ ุจุนุฏ ุงูุฅุฑุณุงู
 * 
 * ๐ ุงูุชูุงูู:
 * - roleSelection.service.ts ููุฎุฏูุงุช
 * - AuthStore ูููุณุชุฎุฏู ุงูุญุงูู
 * - Brand types ููุจุฑุงูุฏุงุช ุงููุชุงุญุฉ
 * - ContractType ููุนููุฏ ุงููุชุงุญุฉ
 */

'use client';

import { useState, useEffect } from 'react';
import { useRouter } from 'next/navigation';
import { Button } from '@/components/ui/button';
import { useAuthStore } from '@/store/auth.store';
import { roleSelectionService } from '@/services/roleSelection.service';

// ======================================
// ๐ฆ ุงุณุชูุฑุงุฏุงุช ุงูุฃููุงุน ูู @depth-studio/types
// ======================================

import {
  // ๐ญ ุฃููุงุน ุงุฎุชูุงุฑ ุงูุฃุฏูุงุฑ ุงูุฃุณุงุณูุฉ - ูุฅุฏุงุฑุฉ ุนูููุฉ ุงุฎุชูุงุฑ ุงูุฏูุฑ
  RoleSelectionSubmission,  // ๐ ุจูุงูุงุช ุชูุฏูู ุทูุจ ุงูุฏูุฑ (selected_role + additional_data + motivation)
  
  // ๐ฅ ุฃููุงุน ุงููุณุชุฎุฏููู ูุงูุจุฑุงูุฏุงุช - ููุชุนุงูู ูุน ุจูุงูุงุช ุงููุณุชุฎุฏููู ูุงูุจุฑุงูุฏุงุช  
  Brand,                    // ๐ข ููุน ุงูุจุฑุงูุฏ ุงููุงูู - ููุจุญุซ ูุนุฑุถ ุงูุจุฑุงูุฏุงุช ูููุณูู ุงูุจุฑุงูุฏ
  User,                     // ๐ค ููุน ุงููุณุชุฎุฏู ุงููุงูู - ููุชุญูู ูู ุงููุณุชุฎุฏู ุงูุญุงูู ูู useAuthStore
  
  // ๐ฏ ุงูุชุนุฏุงุฏุงุช ุงููุทููุจุฉ - ูููู ุฃููุงุน ุงูุฃุฏูุงุฑ ูุงูุนููุฏ ูุงูุจุฑุงูุฏุงุช
  UserRole,                 // ๐ญ ุฃุฏูุงุฑ ุงููุณุชุฎุฏู (photographer, brand_coordinator, marketing_coordinator)
  ContractType,             // ๐ ุฃููุงุน ุนููุฏ ุงููุตูุฑูู (freelancer, salary) - ูุงุฎุชูุงุฑ ููุน ุงูุนูุฏ
  BrandType,                // ๐ข ุฃููุงุน ุงูุจุฑุงูุฏุงุช (local, international, startup, enterprise) - ูุนุฑุถ ูุนูููุงุช ุงูุจุฑุงูุฏ
  Industry                  // ๐ญ ุงูุตูุงุนุงุช (fashion, food, technology, etc.) - ูุนุฑุถ ุตูุงุนุฉ ุงูุจุฑุงูุฏ
} from '@depth-studio/types';

// ======================================
// ๐ ุฃููุงุน ุงูุจูุงูุงุช ุงููุญููุฉ
// ======================================

/** ุญุงูุฉ ุงููููุฐุฌ ุงููุญูู */
interface FormState {
  selectedRole: UserRole | null;          // ุงูุฏูุฑ ุงููุฎุชุงุฑ
  motivation: string;                     // ุฏุงูุน ุงุฎุชูุงุฑ ุงูุฏูุฑ
  
  // ุจูุงูุงุช ุงููุตูุฑ
  contractType: ContractType | null;      // ููุน ุงูุนูุฏ ูููุตูุฑ
  specializations: string[];              // ุงูุชุฎุตุตุงุช ุงููุทููุจุฉ
  experienceYears: number;                // ุณููุงุช ุงูุฎุจุฑุฉ
  portfolioLinks: string[];               // ุฑูุงุจุท ูุนุฑุถ ุงูุฃุนูุงู
  equipmentOwned: string[];               // ุงููุนุฏุงุช ุงููููููุฉ
  
  // ุจูุงูุงุช ููุณู ุงูุจุฑุงูุฏ
  selectedBrandId: string;                // ูุนุฑู ุงูุจุฑุงูุฏ ุงููุฎุชุงุฑ
  brandSearchQuery: string;               // ุงุณุชุนูุงู ุงูุจุญุซ ุนู ุงูุจุฑุงูุฏ
  brandCoordinatorExperience: string;     // ุฎุจุฑุฉ ููุณู ุงูุจุฑุงูุฏ
  
  // ุจูุงูุงุช ููุณู ุงูุชุณููู
  marketingExperience: string;            // ุฎุจุฑุฉ ุงูุชุณููู
  campaignsManagedCount: number;          // ุนุฏุฏ ุงูุญููุงุช ุงููุฏุงุฑุฉ
}

/** ุฎูุงุฑุงุช ุงูุชุฎุตุตุงุช ูููุตูุฑ */
const PHOTOGRAPHY_SPECIALIZATIONS = [
  'ุชุตููุฑ ุงูููุชุฌุงุช',
  'ุชุตููุฑ ุงูุทุนุงู',
  'ุชุตููุฑ ุงูุฃุฒูุงุก',
  'ุชุตููุฑ ุงููุนุงููุงุช',
  'ุชุตููุฑ ุงูุทุจูุนุฉ',
  'ุชุตููุฑ ุงูุจูุฑุชุฑูู',
  'ุงูุชุตููุฑ ุงูุตุญูู',
  'ุชุตููุฑ ุงููุนูุงุฑูุฉ'
];

/** ุฃููุงุน ุงููุนุฏุงุช ุงูุดุงุฆุนุฉ */
const COMMON_EQUIPMENT = [
  'ูุงููุฑุง DSLR',
  'ูุงููุฑุง Mirrorless',
  'ุนุฏุณุงุช ูุชููุนุฉ',
  'ูุนุฏุงุช ุงูุฅุถุงุกุฉ',
  'ุญุงูู ุซูุงุซู ุงูููุงุฆู',
  'ุฎูููุงุช ุงูุชุตููุฑ',
  'ูุนุฏุงุช ุงูุตูุช',
  'ููุญูุงุช ุฃุฎุฑู'
];

// ======================================
// ๐ญ ุงููููู ุงูุฑุฆูุณู
// ======================================

export default function RoleSetupPage() {
  const router = useRouter();
  const { user } = useAuthStore();
  
  // ุญุงูุฉ ุงููููุฐุฌ
  const [formState, setFormState] = useState<FormState>({
    selectedRole: null,
    motivation: '',
    contractType: null,
    specializations: [],
    experienceYears: 0,
    portfolioLinks: [''],
    equipmentOwned: [],
    selectedBrandId: '',
    brandSearchQuery: '',
    brandCoordinatorExperience: '',
    marketingExperience: '',
    campaignsManagedCount: 0
  });
  
  // ุญุงูุฉ ุงูุชุทุจูู
  const [isLoading, setIsLoading] = useState(false);
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [error, setError] = useState<string | null>(null);
  
  // ุจูุงูุงุช ุฎุงุฑุฌูุฉ
  const [availableBrands, setAvailableBrands] = useState<Brand[]>([]);
  const [contractTypes, setContractTypes] = useState<ContractType[]>([]);
  const [loadingBrands, setLoadingBrands] = useState(false);

  // ======================================
  // ๐ ุชุฃุซูุฑุงุช ุฌุงูุจูุฉ
  // ======================================

  /** ุชุญููู ุงูุจูุงูุงุช ุงูุฃูููุฉ */
  useEffect(() => {
    const loadInitialData = async () => {
      if (!user) {
        router.push('/login');
        return;
      }
      
      setIsLoading(true);
      setError(null);
      
      try {
        // ุชุญููู ุฃููุงุน ุงูุนููุฏ ูููุตูุฑูู - ุงุณุชุฎุฏุงู ุงูุงุณู ุงูุตุญูุญ ููุฏุงูุฉ
        const contractTypesResult = await roleSelectionService.getContractTypesForPhotographer();
        const extractedContractTypes = contractTypesResult.contract_types.map(ct => ct.type);
        setContractTypes(extractedContractTypes);
        
        console.log('โ ุชู ุชุญููู ุงูุจูุงูุงุช ุงูุฃูููุฉ ุจูุฌุงุญ');
      } catch (error) {
        console.error('โ ุฎุทุฃ ูู ุชุญููู ุงูุจูุงูุงุช ุงูุฃูููุฉ:', error);
        setError('ูุดู ูู ุชุญููู ุงูุจูุงูุงุช ุงูุฃูููุฉ. ุญุงูู ูุฑุฉ ุฃุฎุฑู.');
      } finally {
        setIsLoading(false);
      }
    };

    loadInitialData();
  }, [user, router]);

  /** ุชุญููู ุงูุจุฑุงูุฏุงุช ุนูุฏ ุงุฎุชูุงุฑ ููุณู ุงูุจุฑุงูุฏ */
  useEffect(() => {
    const loadBrandsForCoordinator = async () => {
      if (formState.selectedRole !== 'brand_coordinator') {
        return;
      }
      
      setLoadingBrands(true);
      
      try {
        // ุงุณุชุฎุฏุงู ุงูุงุณู ุงูุตุญูุญ ููุฏุงูุฉ
        const brandsResult = await roleSelectionService.searchBrandsForCoordinator({
          searchQuery: formState.brandSearchQuery.trim() || undefined,
          status: 'active', // ุงุณุชุฎุฏุงู BrandStatus
          has_coordinator: false // ุงูุจุญุซ ุนู ุงูุจุฑุงูุฏุงุช ุงูุชู ููุณ ูุฏููุง ููุณู
        });
        setAvailableBrands(brandsResult.brands);
        
        console.log(`โ ุชู ุชุญููู ${brandsResult.brands.length} ุจุฑุงูุฏ ููุงุฎุชูุงุฑ`);
      } catch (error) {
        console.error('โ ุฎุทุฃ ูู ุชุญููู ุงูุจุฑุงูุฏุงุช:', error);
        setError('ูุดู ูู ุชุญููู ุงูุจุฑุงูุฏุงุช. ุญุงูู ูุฑุฉ ุฃุฎุฑู.');
      } finally {
        setLoadingBrands(false);
      }
    };

    loadBrandsForCoordinator();
  }, [formState.selectedRole, formState.brandSearchQuery]);

  // ======================================
  // ๐ฏ ูุนุงูุฌุงุช ุงูุฃุญุฏุงุซ
  // ======================================

  /** ูุนุงูุฌ ุงุฎุชูุงุฑ ุงูุฏูุฑ */
  const handleRoleSelection = (role: UserRole) => {
    setFormState(prev => ({
      ...prev,
      selectedRole: role,
      // ุฅุนุงุฏุฉ ุชุตููุฑ ุงูุจูุงูุงุช ุงููุชุฎุตุตุฉ
      contractType: null,
      specializations: [],
      selectedBrandId: '',
      brandSearchQuery: '',
      marketingExperience: '',
      campaignsManagedCount: 0
    }));
    setError(null);
  };

  /** ูุนุงูุฌ ุชุบููุฑ ุงูุชุฎุตุตุงุช */
  const handleSpecializationToggle = (specialization: string) => {
    setFormState(prev => ({
      ...prev,
      specializations: prev.specializations.includes(specialization)
        ? prev.specializations.filter(s => s !== specialization)
        : [...prev.specializations, specialization]
    }));
  };

  /** ูุนุงูุฌ ุชุบููุฑ ุงููุนุฏุงุช */
  const handleEquipmentToggle = (equipment: string) => {
    setFormState(prev => ({
      ...prev,
      equipmentOwned: prev.equipmentOwned.includes(equipment)
        ? prev.equipmentOwned.filter(e => e !== equipment)
        : [...prev.equipmentOwned, equipment]
    }));
  };

  /** ูุนุงูุฌ ุฅุถุงูุฉ/ุชุนุฏูู ุฑุงุจุท ุงููุนุฑุถ */
  const handlePortfolioLinkChange = (index: number, value: string) => {
    setFormState(prev => ({
      ...prev,
      portfolioLinks: prev.portfolioLinks.map((link, i) => 
        i === index ? value : link
      )
    }));
  };

  /** ูุนุงูุฌ ุฅุถุงูุฉ ุฑุงุจุท ูุนุฑุถ ุฌุฏูุฏ */
  const addPortfolioLink = () => {
    setFormState(prev => ({
      ...prev,
      portfolioLinks: [...prev.portfolioLinks, '']
    }));
  };

  /** ูุนุงูุฌ ุญุฐู ุฑุงุจุท ูุนุฑุถ */
  const removePortfolioLink = (index: number) => {
    if (formState.portfolioLinks.length > 1) {
      setFormState(prev => ({
        ...prev,
        portfolioLinks: prev.portfolioLinks.filter((_, i) => i !== index)
      }));
    }
  };

  /** ูุนุงูุฌ ุงูุจุญุซ ูู ุงูุจุฑุงูุฏุงุช */
  const handleBrandSearch = (query: string) => {
    setFormState(prev => ({
      ...prev,
      brandSearchQuery: query,
      selectedBrandId: '' // ุฅุนุงุฏุฉ ุชุตููุฑ ุงูุงุฎุชูุงุฑ ุนูุฏ ุงูุจุญุซ
    }));
  };

  /** ุงูุชุญูู ูู ุตุญุฉ ุงูุจูุงูุงุช */
  const validateForm = (): string | null => {
    if (!formState.selectedRole) {
      return 'ูุฑุฌู ุงุฎุชูุงุฑ ุงูุฏูุฑ ุงููุทููุจ';
    }

    if (formState.motivation.trim().length < 10) {
      return 'ูุฑุฌู ูุชุงุจุฉ ุฏุงูุน ูุงุถุญ ูุงุฎุชูุงุฑ ูุฐุง ุงูุฏูุฑ (10 ุฃุญุฑู ุนูู ุงูุฃูู)';
    }

    switch (formState.selectedRole) {
      case 'photographer':
        if (!formState.contractType) {
          return 'ูุฑุฌู ุงุฎุชูุงุฑ ููุน ุงูุนูุฏ';
        }
        if (formState.specializations.length === 0) {
          return 'ูุฑุฌู ุงุฎุชูุงุฑ ุชุฎุตุต ูุงุญุฏ ุนูู ุงูุฃูู';
        }
        if (formState.experienceYears < 0) {
          return 'ุณููุงุช ุงูุฎุจุฑุฉ ูุฌุจ ุฃู ุชููู ุฑูู ููุฌุจ';
        }
        break;

      case 'brand_coordinator':
        if (!formState.selectedBrandId) {
          return 'ูุฑุฌู ุงุฎุชูุงุฑ ุงูุจุฑุงูุฏ ุงููุทููุจ ุงูุชูุณูู ูู';
        }
        if (formState.brandCoordinatorExperience.trim().length < 10) {
          return 'ูุฑุฌู ูุตู ุฎุจุฑุชู ูู ุชูุณูู ุงูุจุฑุงูุฏุงุช (10 ุฃุญุฑู ุนูู ุงูุฃูู)';
        }
        break;

      case 'marketing_coordinator':
        if (formState.marketingExperience.trim().length < 10) {
          return 'ูุฑุฌู ูุตู ุฎุจุฑุชู ูู ุงูุชุณููู (10 ุฃุญุฑู ุนูู ุงูุฃูู)';
        }
        if (formState.campaignsManagedCount < 0) {
          return 'ุนุฏุฏ ุงูุญููุงุช ูุฌุจ ุฃู ูููู ุฑูู ููุฌุจ ุฃู ุตูุฑ';
        }
        break;
    }

    return null; // ุงูุจูุงูุงุช ุตุญูุญุฉ
  };

  /** ุฏุงูุฉ ูุณุงุนุฏุฉ ูุชูุณูู ููุน ุงูุจุฑุงูุฏ ุจุงูุนุฑุจูุฉ */
  const formatBrandTypeArabic = (brandType: BrandType): string => {
    switch (brandType) {
      case 'local': return 'ูุญูู';
      case 'international': return 'ุฏููู';
      case 'startup': return 'ูุงุดุฆ';
      case 'enterprise': return 'ูุคุณุณู';
      default: return brandType;
    }
  };

  /** ุฏุงูุฉ ูุณุงุนุฏุฉ ูุชูุณูู ุงูุตูุงุนุฉ ุจุงูุนุฑุจูุฉ */
  const formatIndustryArabic = (industry: Industry): string => {
    switch (industry) {
      case 'fashion': return 'ุงูุฃุฒูุงุก';
      case 'food': return 'ุงูุทุนุงู';
      case 'technology': return 'ุงูุชูููููุฌูุง';
      case 'healthcare': return 'ุงูุฑุนุงูุฉ ุงูุตุญูุฉ';
      case 'education': return 'ุงูุชุนููู';
      case 'automotive': return 'ุงูุณูุงุฑุงุช';
      case 'real_estate': return 'ุงูุนูุงุฑุงุช';
      case 'travel': return 'ุงูุณูุฑ';
      case 'beauty': return 'ุงูุฌูุงู';
      case 'other': return 'ุฃุฎุฑู';
      default: return industry;
    }
  };

  /** ุงูุชุญูู ูู ููุน ุงููุณุชุฎุฏู ุงูุญุงูู */
  const validateCurrentUser = (currentUser: User | null): currentUser is User => {
    return currentUser !== null && 
           Boolean(currentUser.id) && 
           Boolean(currentUser.email);
  };

  /** ูุนุงูุฌ ุฅุฑุณุงู ุงููููุฐุฌ */
  const handleSubmit = async () => {
    if (!validateCurrentUser(user)) {
      setError('ุฎุทุฃ: ูู ูุชู ุงูุนุซูุฑ ุนูู ุจูุงูุงุช ุงููุณุชุฎุฏู ุงูุตุญูุญุฉ');
      return;
    }

    // ุงูุชุญูู ูู ุตุญุฉ ุงูุจูุงูุงุช
    const validationError = validateForm();
    if (validationError) {
      setError(validationError);
      return;
    }

    setIsSubmitting(true);
    setError(null);

    try {
      // ุฅุนุฏุงุฏ ุงูุจูุงูุงุช ุงูุฅุถุงููุฉ ุญุณุจ ุงูุฏูุฑ
      let additionalData: RoleSelectionSubmission['additional_data'] = {};

      switch (formState.selectedRole) {
        case 'photographer':
          additionalData = {
            contract_type: formState.contractType!,
            specializations: formState.specializations,
            experience_years: formState.experienceYears,
            portfolio_links: formState.portfolioLinks.filter(link => link.trim()),
            equipment_owned: formState.equipmentOwned
          };
          break;

        case 'brand_coordinator':
          additionalData = {
            selected_brand_id: formState.selectedBrandId,
            brand_search_query: formState.brandSearchQuery,
            brand_coordinator_experience: formState.brandCoordinatorExperience
          };
          break;

        case 'marketing_coordinator':
          additionalData = {
            marketing_experience: formState.marketingExperience,
            campaigns_managed: formState.campaignsManagedCount
          };
          break;
      }

      // ุฅุนุฏุงุฏ ุทูุจ ุงูุฅุฑุณุงู
      const submissionData: RoleSelectionSubmission = {
        selected_role: formState.selectedRole!,
        motivation: formState.motivation.trim(),
        additional_data: additionalData
      };

      // ุฅุฑุณุงู ุงูุทูุจ
      await roleSelectionService.submitRoleSelection(user.id, submissionData);

      console.log(`โ ุชู ุฅุฑุณุงู ุทูุจ ุงุฎุชูุงุฑ ุงูุฏูุฑ: ${formState.selectedRole}`);

      // ุงูุชูุฌูู ูุตูุญุฉ ุงูุงูุชุธุงุฑ
      router.push('/pending');

    } catch (error) {
      console.error('โ ุฎุทุฃ ูู ุฅุฑุณุงู ุทูุจ ุงุฎุชูุงุฑ ุงูุฏูุฑ:', error);
      const errorMessage = error instanceof Error ? error.message : 'ุฎุทุฃ ุบูุฑ ูุชููุน ูู ุฅุฑุณุงู ุงูุทูุจ';
      setError(errorMessage);
    } finally {
      setIsSubmitting(false);
    }
  };

  // ======================================
  // ๐จ ุงูุนุฑุถ
  // ======================================

  // ุญุงูุฉ ุงูุชุญููู ุงูุฃููู
  if (isLoading) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-16 w-16 border-b-2 border-primary-600 mx-auto mb-4"></div>
          <p className="text-lg text-gray-600">ุฌุงุฑู ุชุญููู ุงูุจูุงูุงุช...</p>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 py-8">
      <div className="max-w-4xl mx-auto px-4">
        {/* Header */}
        <div className="text-center mb-8">
          <div className="inline-flex items-center justify-center w-16 h-16 bg-primary-600 text-white rounded-2xl mb-4">
            <span className="text-2xl">๐ญ</span>
          </div>
          <h1 className="text-4xl font-bold text-gray-900 mb-2">
            ุงุฎุชูุงุฑ ุงูุฏูุฑ ุงูููุงุณุจ
          </h1>
          <p className="text-lg text-gray-600">
            ุงุฎุชุฑ ุงูุฏูุฑ ุงูุฐู ููุงุณุจ ููุงุฑุงุชู ูุฎุจุฑุชู ูู ุงุณุชูุฏูู Depth
          </p>
        </div>

        <div className="bg-white rounded-2xl shadow-xl p-8">
          {/* ุงุฎุชูุงุฑ ุงูุฏูุฑ */}
          <div className="mb-8">
            <h2 className="text-2xl font-semibold text-gray-900 mb-6">1. ุงุฎุชุฑ ุงูุฏูุฑ ุงููุทููุจ</h2>
            
            <div className="grid md:grid-cols-3 gap-6">
              {/* ูุตูุฑ */}
              <div 
                className={`p-6 border-2 rounded-xl cursor-pointer transition-all ${
                  formState.selectedRole === 'photographer' 
                    ? 'border-primary-500 bg-primary-50' 
                    : 'border-gray-200 hover:border-primary-300'
                }`}
                onClick={() => handleRoleSelection('photographer')}
              >
                <div className="text-4xl mb-3">๐ธ</div>
                <h3 className="text-xl font-semibold text-gray-900 mb-2">ูุตูุฑ</h3>
                <p className="text-gray-600 text-sm">
                  ุงูุชุฎุตุต ูู ุงูุชุตููุฑ ุงูุฑููู ูุงูุฅุจุฏุงุนู ููุฎุชูู ุฃููุงุน ุงููุญุชูู
                </p>
              </div>

              {/* ููุณู ุงูุจุฑุงูุฏ */}
              <div 
                className={`p-6 border-2 rounded-xl cursor-pointer transition-all ${
                  formState.selectedRole === 'brand_coordinator' 
                    ? 'border-primary-500 bg-primary-50' 
                    : 'border-gray-200 hover:border-primary-300'
                }`}
                onClick={() => handleRoleSelection('brand_coordinator')}
              >
                <div className="text-4xl mb-3">๐ข</div>
                <h3 className="text-xl font-semibold text-gray-900 mb-2">ููุณู ุงูุจุฑุงูุฏ</h3>
                <p className="text-gray-600 text-sm">
                  ุฅุฏุงุฑุฉ ูุชูุณูู ุงููุดุงุฑูุน ูุงูุญููุงุช ูุจุฑุงูุฏ ูุญุฏุฏ
                </p>
              </div>

              {/* ููุณู ุงูุชุณููู */}
              <div 
                className={`p-6 border-2 rounded-xl cursor-pointer transition-all ${
                  formState.selectedRole === 'marketing_coordinator' 
                    ? 'border-primary-500 bg-primary-50' 
                    : 'border-gray-200 hover:border-primary-300'
                }`}
                onClick={() => handleRoleSelection('marketing_coordinator')}
              >
                <div className="text-4xl mb-3">๐</div>
                <h3 className="text-xl font-semibold text-gray-900 mb-2">ููุณู ุงูุชุณููู</h3>
                <p className="text-gray-600 text-sm">
                  ุชุฎุทูุท ูุฅุฏุงุฑุฉ ุงูุญููุงุช ุงูุชุณููููุฉ ูุงูุชุฑููุฌูุฉ
                </p>
              </div>
            </div>
          </div>

          {/* ุฏุงูุน ุงูุงุฎุชูุงุฑ */}
          {formState.selectedRole && (
            <div className="mb-8">
              <h2 className="text-2xl font-semibold text-gray-900 mb-4">2. ุฏุงูุน ุงุฎุชูุงุฑ ูุฐุง ุงูุฏูุฑ</h2>
              <textarea
                value={formState.motivation}
                onChange={(e) => setFormState(prev => ({ ...prev, motivation: e.target.value }))}
                placeholder="ุงุดุฑุญ ููุง ููุงุฐุง ุชุฑูุฏ ูุฐุง ุงูุฏูุฑ ููุง ุงูุฐู ูุคููู ูู..."
                className="w-full p-4 border border-gray-300 rounded-lg resize-none h-32 focus:ring-2 focus:ring-primary-500 focus:border-transparent"
                maxLength={500}
              />
              <div className="text-sm text-gray-500 text-right mt-2">
                {formState.motivation.length}/500 ุญุฑู
              </div>
            </div>
          )}

          {/* ุงูููุงุฐุฌ ุงููุชุฎุตุตุฉ */}
          {formState.selectedRole === 'photographer' && (
            <div className="mb-8">
              <h2 className="text-2xl font-semibold text-gray-900 mb-6">3. ุจูุงูุงุช ุงููุตูุฑ</h2>
              
              {/* ููุน ุงูุนูุฏ */}
              <div className="mb-6">
                <label className="block text-lg font-medium text-gray-700 mb-3">ููุน ุงูุนูุฏ ุงููุทููุจ</label>
                <div className="grid md:grid-cols-2 gap-4">
                  {contractTypes.map((contractType) => (
                    <div
                      key={contractType}
                      className={`p-4 border-2 rounded-lg cursor-pointer transition-all ${
                        formState.contractType === contractType
                          ? 'border-primary-500 bg-primary-50'
                          : 'border-gray-200 hover:border-primary-300'
                      }`}
                      onClick={() => setFormState(prev => ({ ...prev, contractType }))}
                    >
                      <h3 className="font-semibold text-gray-900">
                        {contractType === 'freelancer' ? 'ูุฑููุงูุณุฑ' : 'ุฑุงุชุจ ุซุงุจุช'}
                      </h3>
                      <p className="text-sm text-gray-600 mt-1">
                        {contractType === 'freelancer' 
                          ? 'ุงูุนูู ุจูุธุงู ุงููุดุงุฑูุน ูุงูุฃุฌุฑ ุญุณุจ ุงููุทุนุฉ'
                          : 'ุงูุนูู ุจูุธุงู ุงูุฑุงุชุจ ุงูุดูุฑู ุงูุซุงุจุช'
                        }
                      </p>
                    </div>
                  ))}
                </div>
              </div>

              {/* ุงูุชุฎุตุตุงุช */}
              <div className="mb-6">
                <label className="block text-lg font-medium text-gray-700 mb-3">ุงูุชุฎุตุตุงุช (ุงุฎุชุฑ ูุงุญุฏ ุฃู ุฃูุซุฑ)</label>
                <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-3">
                  {PHOTOGRAPHY_SPECIALIZATIONS.map((specialization) => (
                    <label
                      key={specialization}
                      className="flex items-center p-3 border border-gray-200 rounded-lg hover:bg-gray-50 cursor-pointer"
                    >
                      <input
                        type="checkbox"
                        checked={formState.specializations.includes(specialization)}
                        onChange={() => handleSpecializationToggle(specialization)}
                        className="h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded"
                      />
                      <span className="mr-3 text-gray-700">{specialization}</span>
                    </label>
                  ))}
                </div>
              </div>

              {/* ุณููุงุช ุงูุฎุจุฑุฉ */}
              <div className="mb-6">
                <label className="block text-lg font-medium text-gray-700 mb-3">ุณููุงุช ุงูุฎุจุฑุฉ</label>
                <input
                  type="number"
                  min="0"
                  max="50"
                  value={formState.experienceYears}
                  onChange={(e) => setFormState(prev => ({ ...prev, experienceYears: parseInt(e.target.value) || 0 }))}
                  className="w-full md:w-1/3 p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent"
                  placeholder="ุฃุฏุฎู ุนุฏุฏ ุณููุงุช ุงูุฎุจุฑุฉ"
                />
              </div>

              {/* ุฑูุงุจุท ุงููุนุฑุถ */}
              <div className="mb-6">
                <label className="block text-lg font-medium text-gray-700 mb-3">ุฑูุงุจุท ูุนุฑุถ ุงูุฃุนูุงู</label>
                {formState.portfolioLinks.map((link, index) => (
                  <div key={index} className="flex gap-2 mb-3">
                    <input
                      type="url"
                      value={link}
                      onChange={(e) => handlePortfolioLinkChange(index, e.target.value)}
                      placeholder="https://example.com/portfolio"
                      className="flex-1 p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent"
                    />
                    {formState.portfolioLinks.length > 1 && (
                      <Button
                        type="button"
                        variant="outline"
                        onClick={() => removePortfolioLink(index)}
                        className="px-3"
                      >
                        โ
                      </Button>
                    )}
                  </div>
                ))}
                <Button
                  type="button"
                  variant="outline"
                  onClick={addPortfolioLink}
                  className="text-primary-600 border-primary-600 hover:bg-primary-50"
                >
                  ุฅุถุงูุฉ ุฑุงุจุท ุขุฎุฑ +
                </Button>
              </div>

              {/* ุงููุนุฏุงุช ุงููููููุฉ */}
              <div className="mb-6">
                <label className="block text-lg font-medium text-gray-700 mb-3">ุงููุนุฏุงุช ุงููููููุฉ (ุงุฎุชูุงุฑู)</label>
                <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-3">
                  {COMMON_EQUIPMENT.map((equipment) => (
                    <label
                      key={equipment}
                      className="flex items-center p-3 border border-gray-200 rounded-lg hover:bg-gray-50 cursor-pointer"
                    >
                      <input
                        type="checkbox"
                        checked={formState.equipmentOwned.includes(equipment)}
                        onChange={() => handleEquipmentToggle(equipment)}
                        className="h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded"
                      />
                      <span className="mr-3 text-gray-700">{equipment}</span>
                    </label>
                  ))}
                </div>
              </div>
            </div>
          )}

          {/* ูููุฐุฌ ููุณู ุงูุจุฑุงูุฏ */}
          {formState.selectedRole === 'brand_coordinator' && (
            <div className="mb-8">
              <h2 className="text-2xl font-semibold text-gray-900 mb-6">3. ุจูุงูุงุช ููุณู ุงูุจุฑุงูุฏ</h2>
              
              {/* ุงูุจุญุซ ูู ุงูุจุฑุงูุฏุงุช */}
              <div className="mb-6">
                <label className="block text-lg font-medium text-gray-700 mb-3">ุงูุจุญุซ ุนู ุงูุจุฑุงูุฏ</label>
                <input
                  type="text"
                  value={formState.brandSearchQuery}
                  onChange={(e) => handleBrandSearch(e.target.value)}
                  placeholder="ุงุจุญุซ ุนู ุงูุจุฑุงูุฏ ุจุงูุงุณู..."
                  className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent"
                />
              </div>

              {/* ุงุฎุชูุงุฑ ุงูุจุฑุงูุฏ */}
              <div className="mb-6">
                <label className="block text-lg font-medium text-gray-700 mb-3">ุงุฎุชุฑ ุงูุจุฑุงูุฏ ุงููุทููุจ</label>
                {loadingBrands ? (
                  <div className="text-center py-8">
                    <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-primary-600 mx-auto mb-2"></div>
                    <p className="text-gray-600">ุฌุงุฑู ุชุญููู ุงูุจุฑุงูุฏุงุช...</p>
                  </div>
                ) : availableBrands.length > 0 ? (
                  <div className="grid md:grid-cols-2 gap-4 max-h-64 overflow-y-auto">
                    {availableBrands.map((brand) => (
                      <div
                        key={brand.id}
                        className={`p-4 border-2 rounded-lg cursor-pointer transition-all ${
                          formState.selectedBrandId === brand.id
                            ? 'border-primary-500 bg-primary-50'
                            : 'border-gray-200 hover:border-primary-300'
                        }`}
                        onClick={() => setFormState(prev => ({ ...prev, selectedBrandId: brand.id }))}
                      >
                        <h3 className="font-semibold text-gray-900">{brand.name.ar}</h3>
                        <p className="text-sm text-gray-600 mt-1">{brand.description.ar}</p>
                        <div className="flex items-center mt-2 text-xs text-gray-500">
                          <span>๐ข {formatBrandTypeArabic(brand.brand_type)}</span>
                          <span className="mx-2">โข</span>
                          <span>๐ญ {formatIndustryArabic(brand.industry)}</span>
                        </div>
                      </div>
                    ))}
                  </div>
                ) : (
                  <div className="text-center py-8 text-gray-500">
                    ูุง ุชูุฌุฏ ุจุฑุงูุฏุงุช ูุชุงุญุฉ ุญุงููุงู. ุฌุฑุจ ุงูุจุญุซ ุจูููุงุช ุฃุฎุฑู.
                  </div>
                )}
              </div>

              {/* ุฎุจุฑุฉ ููุณู ุงูุจุฑุงูุฏ */}
              <div className="mb-6">
                <label className="block text-lg font-medium text-gray-700 mb-3">ุฎุจุฑุชู ูู ุชูุณูู ุงูุจุฑุงูุฏุงุช</label>
                <textarea
                  value={formState.brandCoordinatorExperience}
                  onChange={(e) => setFormState(prev => ({ ...prev, brandCoordinatorExperience: e.target.value }))}
                  placeholder="ุงุดุฑุญ ุฎุจุฑุชู ุงูุณุงุจูุฉ ูู ุงูุชุนุงูู ูุน ุงูุจุฑุงูุฏุงุช ูุฅุฏุงุฑุฉ ุงููุดุงุฑูุน..."
                  className="w-full p-4 border border-gray-300 rounded-lg resize-none h-32 focus:ring-2 focus:ring-primary-500 focus:border-transparent"
                  maxLength={500}
                />
                <div className="text-sm text-gray-500 text-right mt-2">
                  {formState.brandCoordinatorExperience.length}/500 ุญุฑู
                </div>
              </div>
            </div>
          )}

          {/* ูููุฐุฌ ููุณู ุงูุชุณููู */}
          {formState.selectedRole === 'marketing_coordinator' && (
            <div className="mb-8">
              <h2 className="text-2xl font-semibold text-gray-900 mb-6">3. ุจูุงูุงุช ููุณู ุงูุชุณููู</h2>
              
              {/* ุฎุจุฑุฉ ุงูุชุณููู */}
              <div className="mb-6">
                <label className="block text-lg font-medium text-gray-700 mb-3">ุฎุจุฑุชู ูู ูุฌุงู ุงูุชุณููู</label>
                <textarea
                  value={formState.marketingExperience}
                  onChange={(e) => setFormState(prev => ({ ...prev, marketingExperience: e.target.value }))}
                  placeholder="ุงุดุฑุญ ุฎุจุฑุชู ูู ุงูุชุณููู ุงูุฑูููุ ุฅุฏุงุฑุฉ ุงูุญููุงุชุ ูุณุงุฆู ุงูุชูุงุตู ุงูุงุฌุชูุงุนู..."
                  className="w-full p-4 border border-gray-300 rounded-lg resize-none h-32 focus:ring-2 focus:ring-primary-500 focus:border-transparent"
                  maxLength={500}
                />
                <div className="text-sm text-gray-500 text-right mt-2">
                  {formState.marketingExperience.length}/500 ุญุฑู
                </div>
              </div>

              {/* ุนุฏุฏ ุงูุญููุงุช ุงููุฏุงุฑุฉ */}
              <div className="mb-6">
                <label className="block text-lg font-medium text-gray-700 mb-3">ุนุฏุฏ ุงูุญููุงุช ุงูุชู ุฃุฏุฑุชูุง ุณุงุจูุงู</label>
                <input
                  type="number"
                  min="0"
                  max="1000"
                  value={formState.campaignsManagedCount}
                  onChange={(e) => setFormState(prev => ({ ...prev, campaignsManagedCount: parseInt(e.target.value) || 0 }))}
                  className="w-full md:w-1/3 p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent"
                  placeholder="ุฃุฏุฎู ุนุฏุฏ ุงูุญููุงุช"
                />
              </div>
            </div>
          )}

          {/* ุฑุณุงูุฉ ุงูุฎุทุฃ */}
          {error && (
            <div className="mb-6 p-4 bg-red-50 border border-red-200 rounded-lg">
              <p className="text-red-700">{error}</p>
            </div>
          )}

          {/* ุฃุฒุฑุงุฑ ุงูุฅุฌุฑุงุกุงุช */}
          <div className="flex gap-4 justify-end">
            <Button
              variant="outline"
              onClick={() => router.back()}
              disabled={isSubmitting}
            >
              ุฑุฌูุน
            </Button>
            
            <Button
              onClick={handleSubmit}
              disabled={!formState.selectedRole || isSubmitting}
              className="px-8"
            >
              {isSubmitting ? (
                <>
                  <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-white ml-2"></div>
                  ุฌุงุฑู ุงูุฅุฑุณุงู...
                </>
              ) : (
                'ุฅุฑุณุงู ุงูุทูุจ'
              )}
            </Button>
          </div>
        </div>
      </div>
    </div>
  );
} 