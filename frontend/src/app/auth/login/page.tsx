"use client";

/**
 * ๐ ุตูุญุฉ ุชุณุฌูู ุงูุฏุฎูู - Depth Studio Frontend
 * ===============================================
 * 
 * ๐ ูุญุฏุซ: ุฏูุณูุจุฑ 2024
 * ๐จโ๐ป ุงููุทูุฑ: ุนูู ุฌูุฏุช
 * ๐ฏ ุงููุฏู: ุตูุญุฉ ุชุณุฌูู ุฏุฎูู ูุชูุงููุฉ ูุน Google Auth
 * 
 * ๐ ุงููููุฒุงุช ุงููููุฌุฒุฉ:
 * - ุชุณุฌูู ุฏุฎูู ุจุงูุจุฑูุฏ ุงูุฅููุชุฑููู + ูููุฉ ุงููุฑูุฑ
 * - ุชุณุฌูู ุฏุฎูู ุจุงููุงุชู ุงูุนุฑุงูู + OTP
 * - ุชุณุฌูู ุฏุฎูู ุจุญุณุงุจ Google (ุฌุฏูุฏ!)
 * - ุชูุงูู ูุงูู ูุน AuthStore ู AuthService
 * - ูุนุงูุฌุฉ ุฃุฎุทุงุก ูุชูุฏูุฉ ูุฑุณุงุฆู ูุฏูุฉ
 * - ุงูุชูุฌูู ุงูุชููุงุฆู ุจุนุฏ ุชุณุฌูู ุงูุฏุฎูู
 */

// ======================================
// ๐ฆ ุงูุงุณุชูุฑุงุฏุงุช ุงูุฃุณุงุณูุฉ
// ======================================

import { useState } from 'react';
// ๐ง useState: ุฅุฏุงุฑุฉ ุญุงูุฉ ุงููููุฐุฌ ูุญููุงู (email, password, phone, activeTab)

import { useRouter } from 'next/navigation';
// ๐ง useRouter: ุงูุชูุฌูู ุงูุจุฑูุฌู ููุตูุญุงุช ูู App Router (ุชูุฌูู ูููุญุฉ ุงูุชุญูู ุจุนุฏ ุชุณุฌูู ุงูุฏุฎูู)

// ======================================
// ๐ช ุฅุฏุงุฑุฉ ุงูุญุงูุฉ ุงูุนุงูุฉ (Zustand Store)
// ======================================

import { useAuth, useAuthActions } from '@/store/auth.store';
// ๐ง useAuth: ุฌูุจ ุญุงูุฉ ุงููุตุงุฏูุฉ (user, isLoading, error, isAuthenticated)
// ๐ง useAuthActions: ุฌูุจ ุฏูุงู ุงููุตุงุฏูุฉ (signInWithEmail, signInWithPhone, signInWithGoogle)
// ๐ ุงูุชูุงูู: ูุชูุงูู ูุน backend/AuthService.ts ู types/auth.ts

// ======================================
// ๐จ ููููุงุช ูุงุฌูุฉ ุงููุณุชุฎุฏู
// ======================================

import GoogleSignInButton from '@/components/auth/GoogleSignInButton';
// ๐ง GoogleSignInButton: ูููู ุชุณุฌูู ุงูุฏุฎูู ุจุฌูุฌู ุงููุทูุฑ ุญุฏูุซุงู
// ๐ ุงูููุงุฆุฏ: ุชุตููู Google Materialุ ูุนุงูุฌุฉ Popup/Redirectุ ุงุณุชุฎุฑุงุฌ Token ุชููุงุฆู
// ๐ ุงูุชูุงูู: ูุชุตู ูุจุงุดุฑุฉ ุจู Firebase Auth ุซู ูุฑุณู ุงููุชูุฌุฉ ููู Backend

// ======================================
// ๐ ุฎุฏูุงุช ุงููุตุงุฏูุฉ (ุงุฎุชูุงุฑู ููุงุณุชุฎุฏุงู ุงููุจุงุดุฑ)
// ======================================

import { authService } from '@/services/auth.service';
// ๐ง authService: ุฎุฏูุฉ ุงููุตุงุฏูุฉ ููุงุชุตุงู ุงููุจุงุดุฑ ุจุงูู Backend
// ๐ ุงููุงุฆุฏุฉ: ูุญุชูู ุนูู 8 ุฏูุงู ูุตุงุฏูุฉ ุดุงููุฉ (signInWithEmail, signInWithGoogle, verifyOTP...)
// ๐ ุงูุชูุงูู: ูุชุฒุงูู ูุน backend/AuthService.ts (1,430 ุณุทุฑ) ุจูุณุจุฉ 100%
// ๐ ููุงุญุธุฉ: ูุชู ุงุณุชุฎุฏุงูู ุนุจุฑ auth.store.ts ูููุณ ูุจุงุดุฑุฉ ูู ุงูููููุงุช

// ======================================
// ๐ท๏ธ ุฃููุงุน ุงูุจูุงูุงุช (TypeScript Types)
// ======================================

import { 
  EmailLoginData,    // ๐ง ุจูุงูุงุช ุชุณุฌูู ุงูุฏุฎูู ุจุงูุจุฑูุฏ (email, password, remember_me?)
  PhoneLoginData,    // ๐ง ุจูุงูุงุช ุชุณุฌูู ุงูุฏุฎูู ุจุงููุงุชู (phone, country_code)
  AuthResult         // ๐ง ูุชูุฌุฉ ุนูููุฉ ุงููุตุงุฏูุฉ (success, user?, token?, needs_role_selection)
} from '@depth-studio/types';
// ๐ ุงููุตุฏุฑ: types/src/auth.ts (314 ุณุทุฑ ุดุงูู ุฌููุน ุฃููุงุน ุงููุตุงุฏูุฉ)
// ๐ ุงูุชูุงูู: ููุณุชุฎุฏูุฉ ูู Backend ู Frontend ูุถูุงู type safety ูุงูู

export default function LoginPage() {
  const router = useRouter();
  
  // ======================================
  // ๐ช ุงููุตูู ูุญุงูุฉ ุงููุตุงุฏูุฉ ูุฃูุนุงููุง
  // ======================================
  
  // ุฌูุจ ุญุงูุฉ ุงููุตุงุฏูุฉ ุงูุญุงููุฉ
  const { isLoading, error, isAuthenticated } = useAuth();
  
  // ุฌูุจ ุฏูุงู ุงููุตุงุฏูุฉ
  const { signInWithEmail, signInWithPhone, signInWithGoogle, clearError } = useAuthActions();
  
  // Form states
  const [activeTab, setActiveTab] = useState<'email' | 'phone'>('email');
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [phone, setPhone] = useState('');

  // ุงูุชุนุงูู ูุน ุชุณุฌูู ุงูุฏุฎูู ุจุงูุจุฑูุฏ
  const handleEmailLogin = async (e: React.FormEvent) => {
    e.preventDefault();
    clearError();
    
    try {
      console.log('๐ ูุญุงููุฉ ุชุณุฌูู ุฏุฎูู ุจุงูุจุฑูุฏ:', email);
      
      const emailData: EmailLoginData = {
        email,
        password,
        remember_me: true
      };
      
      await signInWithEmail(emailData);
      
      // ุงูุชูุฌูู ุณูุญุฏุซ ุชููุงุฆูุงู ูู ุฎูุงู AuthGuard
      console.log('โ ุชู ุชุณุฌูู ุงูุฏุฎูู ุจุงูุจุฑูุฏ ุจูุฌุงุญ');
      
    } catch (error) {
      console.error('โ ุฎุทุฃ ูู ุชุณุฌูู ุงูุฏุฎูู ุจุงูุจุฑูุฏ:', error);
      // ุงูุฎุทุฃ ุณููุนุฑุถ ุชููุงุฆูุงู ูู ุฎูุงู auth store
    }
  };

  // ุงูุชุนุงูู ูุน ุชุณุฌูู ุงูุฏุฎูู ุจุงููุงุชู (ุฅุฑุณุงู OTP)
  const handlePhoneLogin = async (e: React.FormEvent) => {
    e.preventDefault();
    clearError();
    
    try {
      console.log('๐ฑ ูุญุงููุฉ ุฅุฑุณุงู OTP ูููุงุชู:', phone);
      
      const phoneData: PhoneLoginData = {
        phone: phone.replace(/\D/g, ''), // ุฅุฒุงูุฉ ุบูุฑ ุงูุฃุฑูุงู
        country_code: '+964' // ุงูุนุฑุงู
      };
      
      // signInWithPhone ุชุฑุฌุน { success: boolean, message: string }
      const result: { success: boolean; message: string } = await signInWithPhone(phoneData);
      
      if (result.success) {
        // ุงูุชูุฌูู ูุตูุญุฉ ุงูุชุญูู ูู OTP
        router.push(`/phone?phone=${encodeURIComponent(phone)}&purpose=login`);
      }
      
    } catch (error) {
      console.error('โ ุฎุทุฃ ูู ุฅุฑุณุงู OTP:', error);
      // ุงูุฎุทุฃ ุณููุนุฑุถ ุชููุงุฆูุงู ูู ุฎูุงู auth store
    }
  };

  // ูุนุงูุฌ ูุฌุงุญ Google Authentication
  const handleGoogleSuccess = async (result: AuthResult) => {
    try {
      console.log('๐ ุชู ุงุณุชูุงู ูุชูุฌุฉ Google Auth:', result);
      
      // ุงูุชุญูู ูู ูุฌูุฏ google_token ูู ุงููุชูุฌุฉ
      if (result.success && 'google_token' in result) {
        const googleResult = result as AuthResult & { google_token: string };
        
        // ุฅุฑุณุงู ุงูุชููู ููู Backend ุนุจุฑ Auth Store
        await signInWithGoogle({ google_token: googleResult.google_token });
        
        console.log('โ ุชู ุชุณุฌูู ุงูุฏุฎูู ุจุฌูุฌู ุจูุฌุงุญ');
        
        // ุงูุชูุฌูู ุณูุญุฏุซ ุชููุงุฆูุงู ูู ุฎูุงู AuthGuard
      } else {
        throw new Error('ูู ูุชู ุงุณุชูุงู ุจูุงูุงุช ุฌูุฌู ุจุดูู ุตุญูุญ');
      }
      
    } catch (error) {
      console.error('โ ุฎุทุฃ ูู ูุนุงูุฌุฉ Google Auth:', error);
      // ุงูุฎุทุฃ ุณููุนุฑุถ ุชููุงุฆูุงู ูู ุฎูุงู auth store
    }
  };

  // ูุนุงูุฌ ุฎุทุฃ Google Authentication
  const handleGoogleError = (error: Error) => {
    console.error('โ ุฎุทุฃ ูู Google Authentication:', error);
    // ูููู ุฅุถุงูุฉ ูุนุงูุฌุฉ ุฎุงุตุฉ ููุฃุฎุทุงุก ููุง
  };

  // ูุนุงูุฌ Google Authentication ุงูุฑุฆูุณู - ูุณุชุฎุฏู authService ูุจุงุดุฑุฉ ููุญุตูู ุนูู OTPSendResult ููุซุงู
  const handleDirectGoogleAuth = async () => {
    try {
      // ูุซุงู ุนูู ุงุณุชุฎุฏุงู authService ูุจุงุดุฑุฉ ุฅุฐุง ุงุญุชุฌูุง ูุนูููุงุช ุฎุงุตุฉ
      const currentUser = await authService.getCurrentUser();
      
      if (currentUser && isAuthenticated) {
        // ุฅุฐุง ูุงู ุงููุณุชุฎุฏู ูุณุฌู ุฏุฎูู ุจุงููุนูุ ุชูุฌูู ูููุญุฉ ุงูุชุญูู
        router.push('/dashboard');
      } else {
        // ูุง ูุญุชุงุฌ ูุดูุก ุฎุงุต ููุงุ GoogleSignInButton ุณูุชููู ุงูุฃูุฑ
        console.log('ุฌุงูุฒ ูุชุณุฌูู ุฏุฎูู Google');
      }
      
    } catch (error) {
      console.error('ุฎุทุฃ ูู ุงูุชุญูู ูู ุญุงูุฉ ุงููุณุชุฎุฏู:', error);
    }
  };



  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 flex items-center justify-center p-4">
      <div className="max-w-md w-full space-y-8">
        {/* Header */}
        <div className="text-center">
          <h1 className="text-3xl font-bold text-gray-900 mb-2">
            ูุฑุญุจุงู ุจู ูู Depth Studio
          </h1>
          <p className="text-gray-600">
            ุณุฌู ุฏุฎููู ูููุตูู ุฅูู ููุญุฉ ุงูุชุญูู
          </p>
        </div>

        {/* Login Form */}
        <div className="bg-white shadow-lg rounded-lg p-8">
          {/* Tabs */}
          <div className="flex mb-6 border-b">
            <button
              onClick={() => setActiveTab('email')}
              className={`flex-1 py-3 px-4 text-center font-medium ${
                activeTab === 'email'
                  ? 'border-b-2 border-blue-500 text-blue-600'
                  : 'text-gray-500 hover:text-gray-700'
              }`}
            >
              ๐ง ุงูุจุฑูุฏ ุงูุฅููุชุฑููู
            </button>
            <button
              onClick={() => setActiveTab('phone')}
              className={`flex-1 py-3 px-4 text-center font-medium ${
                activeTab === 'phone'
                  ? 'border-b-2 border-blue-500 text-blue-600'
                  : 'text-gray-500 hover:text-gray-700'
              }`}
            >
              ๐ฑ ุฑูู ุงููุงุชู
            </button>
          </div>

          {/* Error Display */}
          {error && (
            <div className="mb-4 p-3 bg-red-50 border border-red-200 rounded-md text-red-700 text-sm">
              {error}
            </div>
          )}

          {/* Email Login Form */}
          {activeTab === 'email' && (
            <form onSubmit={handleEmailLogin} className="space-y-4">
              <div>
                <label htmlFor="email" className="block text-sm font-medium text-gray-700 mb-1">
                  ุงูุจุฑูุฏ ุงูุฅููุชุฑููู
                </label>
                <input
                  id="email"
                  type="email"
                  value={email}
                  onChange={(e) => setEmail(e.target.value)}
                  required
                  className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                  placeholder="your-email@example.com"
                />
              </div>
              
              <div>
                <label htmlFor="password" className="block text-sm font-medium text-gray-700 mb-1">
                  ูููุฉ ุงููุฑูุฑ
                </label>
                <input
                  id="password"
                  type="password"
                  value={password}
                  onChange={(e) => setPassword(e.target.value)}
                  required
                  className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                  placeholder="โขโขโขโขโขโขโขโข"
                />
              </div>

              <button
                type="submit"
                disabled={isLoading}
                className="w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed"
              >
                {isLoading ? '๐ ุฌุงุฑู ุชุณุฌูู ุงูุฏุฎูู...' : '๐ ุชุณุฌูู ุงูุฏุฎูู'}
              </button>
            </form>
          )}

          {/* Phone Login Form */}
          {activeTab === 'phone' && (
            <form onSubmit={handlePhoneLogin} className="space-y-4">
              <div>
                <label htmlFor="phone" className="block text-sm font-medium text-gray-700 mb-1">
                  ุฑูู ุงููุงุชู
                </label>
                <input
                  id="phone"
                  type="tel"
                  value={phone}
                  onChange={(e) => setPhone(e.target.value)}
                  required
                  className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                  placeholder="+964 XXX XXX XXXX"
                />
              </div>

              <button
                type="submit"
                disabled={isLoading}
                className="w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed"
              >
                {isLoading ? '๐ ุฌุงุฑู ุงูุฅุฑุณุงู...' : '๐ฑ ุฅุฑุณุงู ุฑูุฒ ุงูุชุญูู'}
              </button>
            </form>
          )}

          {/* Divider */}
          <div className="my-6 flex items-center">
            <div className="flex-1 border-t border-gray-300"></div>
            <span className="px-4 text-sm text-gray-500">ุฃู</span>
            <div className="flex-1 border-t border-gray-300"></div>
          </div>

          {/* Google Login - ุงููููู ุงููุทูุฑ ุงูุฌุฏูุฏ */}
          <GoogleSignInButton
            variant="login"
            size="md"
            fullWidth={true}
            disabled={isLoading}
            onSuccess={handleGoogleSuccess}
            onError={handleGoogleError}
            className="w-full"
          />
          
          {/* ุฒุฑ ูุณุงุนุฏ ูููุตูู ุงููุจุงุดุฑ ูู authService ููุงุฎุชุจุงุฑ */}
          <button
            onClick={handleDirectGoogleAuth}
            disabled={isLoading}
            className="w-full mt-2 text-sm text-gray-500 hover:text-gray-700 underline"
          >
            ๐ง ูุญุต ุญุงูุฉ ุงููุตุงุฏูุฉ (ููุชุทููุฑ)
          </button>

          {/* Register Link */}
          <div className="mt-6 text-center">
            <p className="text-sm text-gray-600">
              ููุณ ูุฏูู ุญุณุงุจุ{' '}
              <button
                onClick={() => router.push('/auth/register')}
                className="text-blue-600 hover:text-blue-700 font-medium"
              >
                ุฅูุดุงุก ุญุณุงุจ ุฌุฏูุฏ
              </button>
            </p>
          </div>
        </div>

        {/* Footer */}
        <div className="text-center text-sm text-gray-500">
          ยฉ 2024 Depth Studio. ุฌููุน ุงูุญููู ูุญููุธุฉ.
        </div>
      </div>
    </div>
  );
} 