üî• DEPTH STUDIO DEPLOYMENT FILES EXTRACTION REPORT - COMPREHENSIVE
===============================================================
Generated on: $(date)
Project Directory: $(pwd)
Status: PATCH V7 Applied - middleware-manifest.json fix
Analysis Type: Complete Firebase App Hosting Deployment Files

üöÄ CORE DEPLOYMENT CONFIGURATION:
=================================

üìÅ FILE: apphosting.yaml (üî• UPDATED WITH PATCH V7)
============================= # Firebase App Hosting Configuration
# Depth Studio Frontend Deployment Settings
#
# üî• FINAL & DEFINITIVE FIX v5.0 üî•
# SOLUTION: Firebase ignores custom buildCommand when it detects Next.js
# We will TRICK Firebase by hiding Next.js detection and force custom build

# Build settings
runConfig:
  runtime: nodejs18
  minInstances: 0
  maxInstances: 100
  concurrency: 1000
  
env:
  # Firebase Configuration - ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ÿßŸÑŸÇŸäŸÖ ÿßŸÑŸÖÿ®ÿßÿ¥ÿ±ÿ©
  - variable: NEXT_PUBLIC_FIREBASE_API_KEY
    value: AIzaSyDHg1-mxejIMPycZJQeE0sZJmWxsimaMFI
  - variable: NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN
    value: depth-studio.firebaseapp.com
  - variable: NEXT_PUBLIC_FIREBASE_DATABASE_URL
    value: https://depth-studio-default-rtdb.firebaseio.com
  - variable: NEXT_PUBLIC_FIREBASE_PROJECT_ID
    value: depth-studio
  - variable: NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET
    value: depth-studio.firebasestorage.app
  - variable: NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID
    value: "584154257700"
  - variable: NEXT_PUBLIC_FIREBASE_APP_ID
    value: 1:584154257700:web:b570a34dc3854662c3fbb1
  - variable: NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID
    value: G-RY2WLQCK1T
  
  # Google OAuth
  - variable: NEXT_PUBLIC_GOOGLE_CLIENT_ID
    value: 584154257700-d6vp6d876am0c0loapthj64o4riii616.apps.googleusercontent.com
    
  # FCM Notification
  - variable: NEXT_PUBLIC_FCM_VAPID_KEY
    value: BOvPwykYYlnNPddjFxvBVb5sv5VEYGgzMNkbuupSYRVUubcZVHy_--Rm479cbqyTo5vkYxgv9R3rENhknUfJWDg
  
  # Application Configuration - ŸÑŸÑÿ•ŸÜÿ™ÿßÿ¨
  - variable: NEXT_PUBLIC_API_URL
    value: https://us-central1-depth-studio.cloudfunctions.net/api
  - variable: NEXT_PUBLIC_BACKEND_URL
    value: https://us-central1-depth-studio.cloudfunctions.net/api
  - variable: NEXT_PUBLIC_FUNCTIONS_URL
    value: https://us-central1-depth-studio.cloudfunctions.net/api
  - variable: NEXT_PUBLIC_APP_ENV
    value: production
  - variable: NEXT_PUBLIC_ENABLE_LOGGING
    value: "true"
  - variable: NEXT_PUBLIC_FIRESTORE_DATABASE_ID
    value: depth-production
  - variable: NEXT_PUBLIC_USE_EMULATOR
    value: "false"
  - variable: NEXT_PUBLIC_ENABLE_APP_CHECK
    value: "true"
  - variable: NEXT_PUBLIC_APP_CHECK_DEBUG_TOKEN
    value: "false"

buildConfig:
  # üéØ ULTIMATE TRICK: Hide Next.js from Firebase detection, then force our build
  buildCommand: |
    set -e
    echo "üî• STEALTH BUILD v5.0 - Tricking Firebase and building manually..."
    
    # STEALTH STEP: Temporarily hide Next.js detection by renaming next.config.js
    if [ -f "frontend/next.config.js" ]; then
      mv frontend/next.config.js frontend/next.config.js.hidden
    fi
    
    # Step 1: Install all dependencies normally
    npm install
    
    # STEALTH STEP: Restore next.config.js for the build
    if [ -f "frontend/next.config.js.hidden" ]; then
      mv frontend/next.config.js.hidden frontend/next.config.js
    fi
    
    # Step 2: Build frontend manually (creates frontend/.next/standalone/frontend/.next/server/)
    echo "Building frontend application..."
    cd frontend && npm run build && cd ..
    
    # Step 3: Create the Firebase-expected structure
    echo "Creating Firebase-compatible structure..."
    mkdir -p .next/standalone/.next/server
    
    # Step 4: Copy everything from frontend standalone to root
    cp -r frontend/.next/standalone/* .next/standalone/
    
    # Step 5: Fix the nested server path that Firebase buildpack expects
    if [ -d ".next/standalone/frontend/.next/server" ]; then
      echo "Fixing nested server paths..."
      cp -r .next/standalone/frontend/.next/server/* .next/standalone/.next/server/
    fi
    
    # Step 5-B: üî• PATCH V7 - Move middleware-manifest.json to where Firebase expects it
    if [ -f ".next/standalone/.next/middleware-manifest.json" ] && \
       [ ! -f ".next/standalone/.next/server/middleware-manifest.json" ]; then
      echo "Moving middleware-manifest.json into server/ directory..."
      mv .next/standalone/.next/middleware-manifest.json \
         .next/standalone/.next/server/middleware-manifest.json
    fi
    
    # Create empty manifest if doesn't exist at all (fallback safety)
    if [ ! -f ".next/standalone/.next/server/middleware-manifest.json" ]; then
      echo "Creating fallback middleware-manifest.json..."
      echo "{}" > .next/standalone/.next/server/middleware-manifest.json
    fi
    
    # Step 6: Move the main server.js to the root where Firebase expects it
    if [ -f ".next/standalone/frontend/server.js" ]; then
      echo "Moving main server.js to root..."
      cp .next/standalone/frontend/server.js .next/standalone/server.js
    fi
    
    # Step 7: Clean up the nested frontend directory
    rm -rf .next/standalone/frontend
    
    # Step 8: Final verification
    echo "‚úÖ Verifying Firebase expects these files..."
    ls -la .next/standalone/.next/server/middleware-manifest.json
    echo "‚úÖ server.js location:"
    ls -la .next/standalone/server.js
    echo "‚úÖ package.json location:"
    ls -la .next/standalone/package.json
    
    echo "üéØ SUCCESS: Complete Firebase-compatible structure created!"
  
  # Firebase will find everything exactly where the buildpack expects
  outputDirectory: .next/standalone 
END OF FILE: apphosting.yaml
=============================

üìÅ FILE: package.json (ROOT MONOREPO)
=======================
{
  "name": "depth-studio-unified",
  "version": "1.0.0",
  "description": "Depth Studio - ŸÜÿ∏ÿßŸÖ ÿ•ÿØÿßÿ±ÿ© ÿßŸÑŸÖÿ≠ÿ™ŸàŸâ ÿ®ÿßŸÑÿ∞ŸÉÿßÿ° ÿßŸÑÿßÿµÿ∑ŸÜÿßÿπŸä",
  "main": "index.js",
  "scripts": {
    "dev": "concurrently \"npm run --workspace=frontend dev\" \"npm run --workspace=backend start\"",
    "dev:frontend": "npm run --workspace=frontend dev",
    "dev:backend": "npm run --workspace=backend start",
    "build": "npm run --workspace=types build && npm run --workspace=backend build && npm run --workspace=frontend build",
    "build:frontend": "npm run --workspace=frontend build",
    "build:backend": "npm run --workspace=backend build",
    "build:types": "npm run --workspace=types build",
    "install:all": "npm ci",
    "firebase:serve": "firebase serve",
    "firebase:deploy": "firebase deploy",
    "test": "npm run --workspace=frontend test && npm run --workspace=backend test",
    "test:frontend": "npm run --workspace=frontend test",
    "test:backend": "npm run --workspace=backend test",
    "lint": "npm run --workspace=frontend lint && npm run --workspace=backend lint",
    "lint:frontend": "npm run --workspace=frontend lint",
    "lint:backend": "npm run --workspace=backend lint"
  },
  "workspaces": [
    "frontend",
    "backend",
    "types"
  ],
  "overrides": {
    "picomatch": "^4.0.2"
  },
  "keywords": [
    "next.js",
    "react",
    "firebase",
    "ai",
    "content-management",
    "pwa",
    "typescript"
  ],
  "author": "Ali Jawdat",
  "license": "MIT",
  "devDependencies": {
    "@types/fluent-ffmpeg": "^2.1.27",
    "@types/jest": "^29.5.14",
    "concurrently": "^8.2.0",
    "firebase-tools": "^12.0.0",
    "ts-jest": "^29.3.4"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "dependencies": {
    "ffprobe-static": "^3.1.0",
    "fluent-ffmpeg": "^2.1.3",
    "sharp": "^0.34.2"
  }
}

END OF FILE: package.json
======================

üé® FRONTEND CONFIGURATION:
=========================

üìÅ FILE: frontend/package.json
===============================
{
  "name": "frontend",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "preview": "next build && next start",
    "lint": "rm -f .eslintrc.json && eslint src/",
    "lint:fix": "next lint --fix",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "type-check": "tsc --noEmit",
    "test": "vitest",
    "test:ui": "vitest --ui",
    "test:coverage": "vitest --coverage",
    "clean": "rm -rf .next out dist",
    "build:production": "NODE_ENV=production next build",
    "export": "next export"
  },
  "dependencies": {
    "@emotion/react": "^11.14.0",
    "@emotion/styled": "^11.14.0",
    "@mui/icons-material": "^7.1.1",
    "@mui/material": "^7.1.1",
    "@tanstack/react-query": "^5.80.5",
    "@tanstack/react-query-devtools": "^5.80.5",
    "axios": "^1.9.0",
    "clsx": "^2.0.0",
    "firebase": "^11.9.0",
    "next": "^14.2.29",
    "next-themes": "^0.4.6",
    "react": "^18",
    "react-dom": "^18",
    "react-icons": "^4.12.0",
    "tailwind-merge": "^3.3.0",
    "zustand": "^5.0.5"
  },
  "devDependencies": {
    "@testing-library/dom": "^10.4.0",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^16.3.0",
    "@types/node": "^20",
    "@types/react": "^18",
    "@types/react-dom": "^18",
    "@typescript-eslint/eslint-plugin": "^6.21.0",
    "@typescript-eslint/parser": "^6.21.0",
    "@vitejs/plugin-react": "^4.5.1",
    "@vitest/coverage-v8": "^3.2.2",
    "autoprefixer": "^10",
    "eslint": "^8.57.1",
    "eslint-config-next": "14.0.0",
    "eslint-plugin-jsx-a11y": "^6.10.2",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^5.0.0-canary-7118f5dd7-20230705",
    "eslint-plugin-tailwindcss": "^3.18.0",
    "jsdom": "^26.1.0",
    "postcss": "^8",
    "prettier": "^3.5.3",
    "tailwindcss": "^3",
    "typescript": "^5",
    "vitest": "^3.2.1"
  }
}

END OF FILE: frontend/package.json
===============================

üìÅ FILE: frontend/next.config.js
=================================
/** @type {import('next').NextConfig} */
const nextConfig = {
  // ‚úÖ ÿ™ŸÅÿπŸäŸÑ standalone output ŸÑŸÑŸÄ Firebase App Hosting
  output: 'standalone',
  // ‚úÖ ÿ•ÿ≤ÿßŸÑÿ© static export ŸÑŸÑÿ≠ÿµŸàŸÑ ÿπŸÑŸâ SSR ŸÉÿßŸÖŸÑ
  // output: 'export', - ŸÖÿ≠ÿ∞ŸàŸÅ ŸÑŸÑÿ≠ÿµŸàŸÑ ÿπŸÑŸâ React interactivity ŸÉÿßŸÖŸÑ
  trailingSlash: false,
  // distDir: 'out', - ŸÖÿ≠ÿ∞ŸàŸÅ ŸÑÿßÿ≥ÿ™ÿÆÿØÿßŸÖ .next ÿßŸÑÿßŸÅÿ™ÿ±ÿßÿ∂Ÿä
  
  // ÿ™ŸÖŸÉŸäŸÜ Image Optimization ŸÖÿπ SSR
  images: {
    domains: ['firebasestorage.googleapis.com', 'lh3.googleusercontent.com'],
    formats: ['image/webp', 'image/avif'],
  },
  
  // ÿ•ÿπÿØÿßÿØÿßÿ™ ÿµÿßÿ±ŸÖÿ© ŸÑŸÑÿ•ŸÜÿ™ÿßÿ¨
  eslint: {
    ignoreDuringBuilds: false,
  },
  typescript: {
    ignoreBuildErrors: false,
  },
  
  // ÿ•ÿπÿØÿßÿØÿßÿ™ ÿ™ÿ¨ÿ±Ÿäÿ®Ÿäÿ© ŸÖÿ≠ÿ≥ŸÜÿ©
  experimental: {
    missingSuspenseWithCSRBailout: false,
    optimizePackageImports: ['@mui/material', '@mui/icons-material'],
    // üî• ÿ•ÿ∂ÿßŸÅÿ© ŸÖŸáŸÖÿ©: ÿ≠ŸÑ ŸÖÿ¥ÿßŸÉŸÑ monorepo ŸÖÿπ standalone
    outputFileTracingRoot: require('path').join(__dirname, '../'),
  },
  
  // üî• ÿ•ÿµŸÑÿßÿ≠ Firebase Auth prerender errors
  // ÿ™ÿ¨ÿßŸáŸÑ prerender errors ŸàŸÖÿ™ÿßÿ®ÿπÿ© ÿßŸÑÿ®ŸÜÿßÿ°
  // ÿµŸÅÿ≠ÿßÿ™ Auth ÿ≥ÿ™ÿπŸÖŸÑ ÿ®ÿ¥ŸÉŸÑ ÿ∑ÿ®ŸäÿπŸä ŸÅŸä runtime
  
  // Environment Variables ŸÑŸÑŸÄ Build ŸàÿßŸÑRuntime
  env: {
    NEXT_PUBLIC_FIREBASE_API_KEY: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,
    NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,
    NEXT_PUBLIC_FIREBASE_DATABASE_URL: process.env.NEXT_PUBLIC_FIREBASE_DATABASE_URL,
    NEXT_PUBLIC_FIREBASE_PROJECT_ID: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,
    NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,
    NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,
    NEXT_PUBLIC_FIREBASE_APP_ID: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,
    NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID: process.env.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID,
    NEXT_PUBLIC_FCM_VAPID_KEY: process.env.NEXT_PUBLIC_FCM_VAPID_KEY,
    NEXT_PUBLIC_API_URL: process.env.NEXT_PUBLIC_API_URL,
    NEXT_PUBLIC_APP_ENV: process.env.NEXT_PUBLIC_APP_ENV,
    NEXT_PUBLIC_ENABLE_LOGGING: process.env.NEXT_PUBLIC_ENABLE_LOGGING,
    NEXT_PUBLIC_GOOGLE_CLIENT_ID: process.env.NEXT_PUBLIC_GOOGLE_CLIENT_ID,
    NEXT_PUBLIC_FIRESTORE_DATABASE_ID: process.env.NEXT_PUBLIC_FIRESTORE_DATABASE_ID,
    NEXT_PUBLIC_USE_EMULATOR: process.env.NEXT_PUBLIC_USE_EMULATOR
  }
}

module.exports = nextConfig 
END OF FILE: frontend/next.config.js
=================================

üìÅ FILE: frontend/src/middleware.ts (üî• CRITICAL FOR PATCH V7)
===================================
import { NextResponse } from 'next/server'
import type { NextRequest } from 'next/server'

/**
 * üîê Middleware ŸÑŸÑÿ≠ŸÖÿßŸäÿ© ŸàÿßŸÑÿ™Ÿàÿ¨ŸäŸá - Depth Studio
 * =====================================================
 * 
 * üéØ ÿßŸÑÿ£ŸáÿØÿßŸÅ:
 * - ÿ≠ŸÖÿßŸäÿ© ŸÖÿ≥ÿßÿ±ÿßÿ™ Dashboard ŸÖŸÜ ÿßŸÑŸàÿµŸàŸÑ ÿ∫Ÿäÿ± ÿßŸÑŸÖÿµÿ±ÿ≠
 * - ÿßŸÑÿ™ÿ≠ŸÇŸÇ ŸÖŸÜ Ÿàÿ¨ŸàÿØ tokens ÿßŸÑŸÖÿµÿßÿØŸÇÿ©
 * - ÿ™Ÿàÿ¨ŸäŸá ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖŸäŸÜ ÿ∫Ÿäÿ± ÿßŸÑŸÖÿµÿßÿØŸÇŸäŸÜ ŸÑÿµŸÅÿ≠ÿ© ÿ™ÿ≥ÿ¨ŸäŸÑ ÿßŸÑÿØÿÆŸàŸÑ
 * - ÿØÿπŸÖ multiple auth sources (authToken + firebaseToken)
 * 
 * üõ°Ô∏è ÿßŸÑŸÖÿ≥ÿßÿ±ÿßÿ™ ÿßŸÑŸÖÿ≠ŸÖŸäÿ©:
 * - /dashboard/admin/* : ŸÑŸàÿ≠ÿ© ÿßŸÑÿ£ÿØŸÖŸÜ (super_admin ŸÅŸÇÿ∑)
 * - /dashboard/photographer/* : ŸÑŸàÿ≠ÿ© ÿßŸÑŸÖÿµŸàÿ± (photographer ŸÅŸÇÿ∑)
 * - /dashboard/brand/* : ŸÑŸàÿ≠ÿ© ÿßŸÑÿ®ÿ±ÿßŸÜÿØ (brand_coordinator ŸÅŸÇÿ∑)
 * - /dashboard/marketing/* : ŸÑŸàÿ≠ÿ© ÿßŸÑÿ™ÿ≥ŸàŸäŸÇ (marketing_coordinator ŸÅŸÇÿ∑)
 * - /profile : ÿßŸÑŸÖŸÑŸÅ ÿßŸÑÿ¥ÿÆÿµŸä (ÿ¨ŸÖŸäÿπ ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖŸäŸÜ ÿßŸÑŸÖÿµÿßÿØŸÇŸäŸÜ)
 * 
 * üîÑ ÿ™ÿØŸÅŸÇ ÿßŸÑŸÖÿµÿßÿØŸÇÿ©:
 * 1. ŸÅÿ≠ÿµ Ÿàÿ¨ŸàÿØ authToken ÿ£Ÿà __session (Firebase)
 * 2. ÿ•ÿ∞ÿß ŸÖÿ≥ÿßÿ± ŸÖÿ≠ŸÖŸä Ÿàÿ®ÿØŸàŸÜ token ‚Üí redirect ŸÑŸÄ /auth/login
 * 3. ÿ®ÿßŸÇŸä ÿßŸÑÿ™ÿ≠ŸÇŸÇ ŸÖŸÜ ÿßŸÑÿ£ÿØŸàÿßÿ± ‚Üí AuthWrapper Ÿäÿ™ÿπÿßŸÖŸÑ ŸÖÿπŸá
 */
export function middleware(request: NextRequest) {
  const pathname = request.nextUrl.pathname
  
  // Skip middleware for static files and API routes
  if (
    pathname.startsWith('/_next') ||
    pathname.startsWith('/api') ||
    pathname.includes('.')
  ) {
    return NextResponse.next()
  }
  
  // Try to get auth info from multiple sources
  const authToken = request.cookies.get('authToken')?.value
  const firebaseToken = request.cookies.get('__session')?.value
  const hasAnyToken = authToken || firebaseToken
  
  // ======================================
  // üõ°Ô∏è Protected routes - ÿßŸÑŸÖÿ≥ÿßÿ±ÿßÿ™ ÿßŸÑŸÖÿ≠ŸÖŸäÿ©
  // ======================================
  
  const protectedPaths = [
    '/dashboard/admin',      // ‚úÖ ŸÖÿ§ŸÉÿØ ŸÖŸàÿ¨ŸàÿØ - ŸÑŸàÿ≠ÿ© ÿßŸÑÿ£ÿØŸÖŸÜ ÿßŸÑÿ¥ÿßŸÖŸÑÿ©
    '/dashboard/photographer', // ‚úÖ ŸÖÿ§ŸÉÿØ ŸÖŸàÿ¨ŸàÿØ - ŸÑŸàÿ≠ÿ© ÿßŸÑŸÖÿµŸàÿ±
    '/dashboard/brand',      // ‚úÖ ŸÖÿ§ŸÉÿØ ŸÖŸàÿ¨ŸàÿØ - ŸÑŸàÿ≠ÿ© ÿßŸÑÿ®ÿ±ÿßŸÜÿØ
    '/dashboard/marketing',  // ‚úÖ ŸÖÿ§ŸÉÿØ ŸÖŸàÿ¨ŸàÿØ - ŸÑŸàÿ≠ÿ© ÿßŸÑÿ™ÿ≥ŸàŸäŸÇ
    '/profile'               // ‚úÖ ŸÖÿ§ŸÉÿØ ŸÖŸàÿ¨ŸàÿØ - ÿßŸÑŸÖŸÑŸÅ ÿßŸÑÿ¥ÿÆÿµŸä
  ];
  const isProtectedPath = protectedPaths.some(path => pathname.startsWith(path))
  
  // ======================================
  // üîë Authentication routes - ŸÖÿ≥ÿßÿ±ÿßÿ™ ÿßŸÑŸÖÿµÿßÿØŸÇÿ©  
  // ======================================
  
  const authPaths = ['/auth/login', '/auth/register', '/phone']
  const isAuthPath = authPaths.some(path => pathname.startsWith(path))
  
  // ======================================
  // ‚ö° Special routes - ÿßŸÑŸÖÿ≥ÿßÿ±ÿßÿ™ ÿßŸÑÿÆÿßÿµÿ©
  // ======================================
  
  const specialAuthPaths = ['/role-setup', '/pending']
  const isSpecialAuthPath = specialAuthPaths.some(path => pathname.startsWith(path))
  
  console.log('üö¶ Middleware:', { 
    pathname, 
    hasAuthToken: !!authToken,
    hasFirebaseToken: !!firebaseToken,
    hasAnyToken: !!hasAnyToken,
    isProtectedPath, 
    isAuthPath, 
    isSpecialAuthPath 
  })
  
  // ======================================
  // üéØ ŸÖŸÜÿ∑ŸÇ ÿßŸÑÿ≠ŸÖÿßŸäÿ© ÿßŸÑÿ∞ŸÉŸä
  // ======================================
  
  // ‚≠ê ÿ™ÿ®ÿ≥Ÿäÿ∑ ÿßŸÑŸÖŸÜÿ∑ŸÇ - ÿÆŸÑŸä AuthWrapper Ÿäÿ™ÿπÿßŸÖŸÑ ŸÖÿπ ŸÉŸÑ ÿ¥Ÿä
  // Middleware ÿ®ÿ≥ Ÿäÿ≠ŸÖŸä ÿßŸÑÿµŸÅÿ≠ÿßÿ™ ÿßŸÑÿ≠ÿ≥ÿßÿ≥ÿ© ÿ¨ÿØÿßŸã
  
  // 1. ÿ•ÿ∞ÿß ÿßŸÑÿµŸÅÿ≠ÿ© ŸÖÿ≠ŸÖŸäÿ© ŸàÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖ ŸÖÿß ÿπŸÜÿØŸá ÿ£Ÿä ŸÜŸàÿπ ŸÖŸÜ ÿßŸÑÿ™ŸàŸÉŸÜ
  if (isProtectedPath && !hasAnyToken) {
    console.log('üîÑ Middleware: Redirecting to login - protected path without any token')
    return NextResponse.redirect(new URL('/auth/login', request.url))
  }
  
  // 2. ÿ®ÿßŸÇŸä ÿßŸÑÿ™Ÿàÿ¨ŸäŸá ÿÆŸÑŸä AuthWrapper Ÿäÿ™ÿπÿßŸÖŸÑ ŸÖÿπŸá
  // (ÿßŸÑÿ™ÿ≠ŸÇŸÇ ŸÖŸÜ ÿßŸÑÿ£ÿØŸàÿßÿ±ÿå ÿßŸÜÿ™Ÿáÿßÿ° ÿµŸÑÿßÿ≠Ÿäÿ© ÿßŸÑÿ™ŸàŸÉŸÜÿå ÿ•ŸÑÿÆ)
  return NextResponse.next()
}

/**
 * üî• ENHANCED MIDDLEWARE ŸÑÿ≠ŸÑ ŸÖÿ¥ŸÉŸÑÿ© Firebase App Hosting
 * 
 * ÿßŸÑŸÖÿ¥ŸÉŸÑÿ©: Firebase buildpack Ÿäÿ™ŸàŸÇÿπ Ÿàÿ¨ŸàÿØ middleware-manifest.json
 * ÿßŸÑÿ≠ŸÑ: ÿ™ÿ≠ÿ≥ŸäŸÜ ÿßŸÑŸÄ middleware ÿßŸÑŸÖŸàÿ¨ŸàÿØ ŸÑÿ∂ŸÖÿßŸÜ ÿ•ŸÜÿ¥ÿßÿ° manifest ÿµÿ≠Ÿäÿ≠
 * 
 * ÿßŸÑÿ¢ŸÜ Ÿáÿ∞ÿß middleware ŸäÿπŸÖŸÑ ÿ®ÿ¥ŸÉŸÑ ÿ∑ÿ®ŸäÿπŸä + Ÿäÿ≠ŸÑ ŸÖÿ¥ŸÉŸÑÿ© ÿßŸÑŸÜÿ¥ÿ±
 */

export const config = {
  matcher: [
    /*
     * ÿ™ÿ∑ÿ®ŸäŸÇ ÿπŸÑŸâ ÿ¨ŸÖŸäÿπ ÿßŸÑŸÖÿ≥ÿßÿ±ÿßÿ™ ÿπÿØÿß:
     * - api (API routes)
     * - _next/static (static files)
     * - _next/image (image optimization files)
     * - favicon.ico (favicon file)
     */
    '/((?!api|_next/static|_next/image|favicon.ico).*)',
  ],
} 
END OF FILE: frontend/src/middleware.ts
===================================

üåç ENVIRONMENT & CONFIG FILES:
====================

üìÅ FILE: frontend/.env.production
==================================
# Production Environment Variables for Local Build
# Ÿáÿ∞ÿß ÿßŸÑŸÖŸÑŸÅ Ÿäÿ≥ÿ™ÿÆÿØŸÖ ŸÅŸÇÿ∑ ŸÑŸÑÿ®ŸÜÿßÿ° ÿßŸÑŸÖÿ≠ŸÑŸä
# Firebase App Hosting ÿ≥Ÿäÿ≥ÿ™ÿ®ÿØŸÑ Ÿáÿ∞Ÿá ÿßŸÑŸÇŸäŸÖ ÿ®ŸÇŸäŸÖ apphosting.yaml

# Firebase Configuration
NEXT_PUBLIC_FIREBASE_API_KEY=AIzaSyDHg1-mxejIMPycZJQeE0sZJmWxsimaMFI
NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=depth-studio.firebaseapp.com
NEXT_PUBLIC_FIREBASE_DATABASE_URL=https://depth-studio-default-rtdb.firebaseio.com
NEXT_PUBLIC_FIREBASE_PROJECT_ID=depth-studio
NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=depth-studio.firebasestorage.app
NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=584154257700
NEXT_PUBLIC_FIREBASE_APP_ID=1:584154257700:web:b570a34dc3854662c3fbb1
NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID=G-RY2WLQCK1T

# Application Environment
NEXT_PUBLIC_APP_ENV=production
NEXT_PUBLIC_API_URL=https://us-central1-depth-studio.cloudfunctions.net/api
NEXT_PUBLIC_USE_EMULATOR=false
END OF FILE: frontend/.env.production
==================================

üìÅ FILE: frontend/.env.local (DEV CONFIG)
========================================
FILE NOT FOUND - Using .env.production for production deployment

END OF FILE: frontend/.env.local
========================================

üîë FIREBASE & API CONFIGURATION:
=============================

üìÅ FILE: firestore.rules
========================
rules_version = '2';

// üîí ŸÇŸàÿßÿπÿØ ÿ£ŸÖÿßŸÜ Firestore ŸÖÿ≠ÿØÿ´ÿ© - Depth Studio (ÿßŸÑŸÜÿ≥ÿÆÿ© ÿßŸÑŸÖÿ®ÿ≥ÿ∑ÿ©)
// üìÖ ŸÖÿ≠ÿØÿ´: ÿØŸäÿ≥ŸÖÿ®ÿ± 19, 2024  
// üë§ ÿßŸÑŸÖÿ∑Ÿàÿ±: ÿπŸÑŸä ÿ¨ŸàÿØÿ™
// üéØ ŸÖÿ™ŸàÿßŸÅŸÇ 100% ŸÖÿπ ÿßŸÑÿ£ŸÜŸàÿßÿπ ŸàÿßŸÑÿ®ŸÜŸäÿ© ÿßŸÑŸÖÿ®ÿ≥ÿ∑ÿ©

service cloud.firestore {
  match /databases/{database}/documents {
    
    // ==========================================
    // üõ†Ô∏è HELPER FUNCTIONS (ÿØŸàÿßŸÑ ŸÖÿ≥ÿßÿπÿØÿ©)
    // ==========================================
    
    // ÿßŸÑÿ™ÿ≠ŸÇŸÇ ŸÖŸÜ ÿ™ÿ≥ÿ¨ŸäŸÑ ÿßŸÑÿØÿÆŸàŸÑ
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // ÿßŸÑÿ™ÿ≠ŸÇŸÇ ŸÖŸÜ ŸÖŸÑŸÉŸäÿ© ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖ
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // ÿßŸÑÿ™ÿ≠ŸÇŸÇ ŸÖŸÜ ÿµŸÑÿßÿ≠Ÿäÿ© Admin (ŸÖÿ≠ÿØÿ´ ŸÑŸÑÿ®ŸÜŸäÿ© ÿßŸÑÿ¨ÿØŸäÿØÿ©)
    function isAdmin() {
      return isAuthenticated() && 
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.primary_role == 'admin';
    }
    
    // ÿßŸÑÿ™ÿ≠ŸÇŸÇ ŸÖŸÜ ÿµŸÑÿßÿ≠Ÿäÿ© Marketing Coordinator
    function isMarketingCoordinator() {
      return isAuthenticated() && 
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.primary_role == 'marketing_coordinator';
    }
    
    // ÿßŸÑÿ™ÿ≠ŸÇŸÇ ŸÖŸÜ ÿµŸÑÿßÿ≠Ÿäÿ© Brand Coordinator
    function isBrandCoordinator() {
      return isAuthenticated() && 
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.primary_role == 'brand_coordinator';
    }
    
    // ÿßŸÑÿ™ÿ≠ŸÇŸÇ ŸÖŸÜ ÿµŸÑÿßÿ≠Ÿäÿ© Photographer
    function isPhotographer() {
      return isAuthenticated() && 
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.primary_role == 'photographer';
    }
    
    // ÿßŸÑÿ™ÿ≠ŸÇŸÇ ŸÖŸÜ ÿßŸÑÿµŸÑÿßÿ≠Ÿäÿßÿ™ ÿßŸÑÿ•ÿØÿßÿ±Ÿäÿ© (Admin ÿ£Ÿà Marketing Coordinator)
    function hasAdminAccess() {
      return isAdmin() || isMarketingCoordinator();
    }
    
    // ÿßŸÑÿ™ÿ≠ŸÇŸÇ ŸÖŸÜ ÿµŸÑÿßÿ≠Ÿäÿ© ŸÖÿ≠ÿØÿØÿ© ŸÅŸä user_permissions (ŸÖÿ≠ÿØÿ´ ŸÑŸÑÿ®ŸÜŸäÿ© ÿßŸÑÿ¨ÿØŸäÿØÿ©)
    function hasPermission(permissionType, action) {
      return isAuthenticated() && 
             exists(/databases/$(database)/documents/user_permissions/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/user_permissions/$(request.auth.uid)).data.permissions[permissionType][action] == true;
    }
    
    // ==========================================
    // üë• USERS COLLECTION (ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖŸäŸÜ)
    // ==========================================
    match /users/{userId} {
      // ÿßŸÑŸÇÿ±ÿßÿ°ÿ©: ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖ ŸÜŸÅÿ≥Ÿá ÿ£Ÿà ÿßŸÑŸÖÿØÿ±ÿßÿ°
      allow read: if isOwner(userId) || hasAdminAccess();
      
      // ÿßŸÑÿ•ŸÜÿ¥ÿßÿ°: Admin ÿ£Ÿà ÿßŸÑÿ™ÿ≥ÿ¨ŸäŸÑ ÿßŸÑÿ∞ÿßÿ™Ÿä ŸÑŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖŸäŸÜ ÿßŸÑÿ¨ÿØÿØ
      allow create: if isAdmin() || 
                       (isOwner(userId) && request.auth.uid == userId);
      
      // ÿßŸÑÿ™ÿ≠ÿØŸäÿ´: ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖ ŸÜŸÅÿ≥Ÿá ŸÑŸÑÿ®ŸäÿßŸÜÿßÿ™ ÿßŸÑÿ£ÿ≥ÿßÿ≥Ÿäÿ©ÿå ÿ£Ÿà Admin ŸÑŸÑŸÉŸÑ
      allow update: if (isOwner(userId) && 
                        // ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖ ÿßŸÑÿπÿßÿØŸä - ŸÑÿß ŸäŸÖŸÉŸÜŸá ÿ™ÿ≠ÿØŸäÿ´ ÿßŸÑÿØŸàÿ± ŸàÿßŸÑUID
                        (!("primary_role" in request.resource.data.diff(resource.data).changedKeys()) &&
                         !("firebase_uid" in request.resource.data.diff(resource.data).changedKeys()))) ||
                       isAdmin();
      
      // ÿßŸÑÿ≠ÿ∞ŸÅ: Admin ŸÅŸÇÿ∑
      allow delete: if isAdmin();
    }
    
    // ==========================================
    // üîê USER_PERMISSIONS COLLECTION (ÿßŸÑÿµŸÑÿßÿ≠Ÿäÿßÿ™)
    // ==========================================
    match /user_permissions/{userId} {
      // ÿßŸÑŸÇÿ±ÿßÿ°ÿ©: ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖ ŸÜŸÅÿ≥Ÿá ÿ£Ÿà ÿßŸÑŸÖÿØÿ±ÿßÿ°
      allow read: if isOwner(userId) || hasAdminAccess();
      
      // ÿßŸÑÿ•ŸÜÿ¥ÿßÿ° ŸàÿßŸÑÿ™ÿ≠ÿØŸäÿ´ ŸàÿßŸÑÿ≠ÿ∞ŸÅ: Admin ŸÅŸÇÿ∑
      allow create, update, delete: if isAdmin();
    }
    
    // ==========================================
    // üì∏ PHOTOGRAPHER_INFO COLLECTION (ŸÖÿπŸÑŸàŸÖÿßÿ™ ÿßŸÑŸÖÿµŸàÿ±ŸäŸÜ)
    // ==========================================
    match /photographer_info/{infoId} {
      // ÿßŸÑŸÇÿ±ÿßÿ°ÿ©: ÿßŸÑŸÖÿµŸàÿ± ŸÜŸÅÿ≥Ÿá ÿ£Ÿà ÿßŸÑŸÖÿØÿ±ÿßÿ°
      allow read: if resource.data.user_id == request.auth.uid ||
                     hasAdminAccess();
      
      // ÿßŸÑÿ•ŸÜÿ¥ÿßÿ°: Admin ÿ£Ÿà ÿßŸÑŸÖÿµŸàÿ± ŸÜŸÅÿ≥Ÿá
      allow create: if (request.resource.data.user_id == request.auth.uid && isPhotographer()) ||
                       isAdmin();
      
      // ÿßŸÑÿ™ÿ≠ÿØŸäÿ´: ÿßŸÑŸÖÿµŸàÿ± ŸÜŸÅÿ≥Ÿá ÿ£Ÿà ÿßŸÑŸÖÿØÿ±ÿßÿ°
      allow update: if resource.data.user_id == request.auth.uid ||
                       hasAdminAccess();
      
      // ÿßŸÑÿ≠ÿ∞ŸÅ: Admin ŸÅŸÇÿ∑
      allow delete: if isAdmin();
    }
    
    // ==========================================
    // üè¢ BRANDS COLLECTION (ÿßŸÑÿ®ÿ±ÿßŸÜÿØÿßÿ™)
    // ==========================================
    match /brands/{brandId} {
      // ÿßŸÑŸÇÿ±ÿßÿ°ÿ©: ÿ¨ŸÖŸäÿπ ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖŸäŸÜ ÿßŸÑŸÖÿµÿ±ÿ≠ ŸÑŸáŸÖ
      allow read: if isAuthenticated();
      
      // ÿßŸÑÿ•ŸÜÿ¥ÿßÿ°: Admin ŸÅŸÇÿ∑
      allow create: if hasAdminAccess();
      
      // ÿßŸÑÿ™ÿ≠ÿØŸäÿ´: Admin ÿ£Ÿà Brand Coordinator ÿßŸÑŸÖÿÆÿµÿµ ŸÑŸÑÿ®ÿ±ÿßŸÜÿØ
      allow update: if hasAdminAccess() ||
                       (isBrandCoordinator() && resource.data.assigned_coordinator == request.auth.uid);
      
      // ÿßŸÑÿ≠ÿ∞ŸÅ: Admin ŸÅŸÇÿ∑
      allow delete: if isAdmin();
    }
    
    // ==========================================
    // üéØ CAMPAIGNS COLLECTION (ÿßŸÑÿ≠ŸÖŸÑÿßÿ™)
    // ==========================================
    match /campaigns/{campaignId} {
      // ÿßŸÑŸÇÿ±ÿßÿ°ÿ©: ÿ¨ŸÖŸäÿπ ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖŸäŸÜ ÿßŸÑŸÖÿµÿ±ÿ≠ ŸÑŸáŸÖ
      allow read: if isAuthenticated();
      
      // ÿßŸÑÿ•ŸÜÿ¥ÿßÿ°: Admin ÿ£Ÿà Marketing Coordinator
      allow create: if hasAdminAccess();
      
      // ÿßŸÑÿ™ÿ≠ÿØŸäÿ´: Admin ÿ£Ÿà ÿßŸÑŸÖÿµŸàÿ± ÿßŸÑŸÖŸÉŸÑŸÅ ŸÑÿ™ÿ≠ÿØŸäÿ´ ÿßŸÑÿ≠ÿßŸÑÿ© ŸÅŸÇÿ∑
      allow update: if hasAdminAccess() ||
                       (isPhotographer() && 
                        request.auth.uid in resource.data.assigned_photographers &&
                        request.resource.data.diff(resource.data).changedKeys().hasOnly(['status']));
      
      // ÿßŸÑÿ≠ÿ∞ŸÅ: Admin ŸÅŸÇÿ∑
      allow delete: if isAdmin();
    }
    
    // ==========================================
    // üìÅ CONTENT COLLECTION (ÿßŸÑŸÖÿ≠ÿ™ŸàŸâ)
    // ==========================================
    match /content/{contentId} {
      // ÿßŸÑŸÇÿ±ÿßÿ°ÿ©: ÿßŸÑŸÖÿµŸàÿ± ÿßŸÑŸÖÿßŸÑŸÉ ÿ£Ÿà ÿßŸÑŸÖÿØÿ±ÿßÿ° ÿ£Ÿà Brand Coordinator ŸÑŸÑÿ®ÿ±ÿßŸÜÿØ ÿßŸÑŸÖÿ≠ÿØÿØ
      allow read: if isAuthenticated() && (
                     resource.data.photographer_id == request.auth.uid ||
                     hasAdminAccess() ||
                     (isBrandCoordinator() && 
                      exists(/databases/$(database)/documents/brands/$(resource.data.brand_id)) &&
                      get(/databases/$(database)/documents/brands/$(resource.data.brand_id)).data.assigned_coordinator == request.auth.uid)
                  );
      
      // ÿßŸÑÿ•ŸÜÿ¥ÿßÿ°: ÿßŸÑŸÖÿµŸàÿ± ÿßŸÑŸÖÿÆŸàŸÑ ÿ£Ÿà ÿßŸÑŸÖÿØÿ±ÿßÿ°
      allow create: if isPhotographer() || hasAdminAccess();
      
      // ÿßŸÑÿ™ÿ≠ÿØŸäÿ´: ÿßŸÑŸÖÿµŸàÿ± ÿßŸÑŸÖÿßŸÑŸÉ ŸÑŸÑŸÖŸÑÿßÿ≠ÿ∏ÿßÿ™ÿå ÿ£Ÿà ÿßŸÑŸÖÿØÿ±ÿßÿ° ŸÑŸÑŸÖÿ±ÿßÿ¨ÿπÿ© ŸàÿßŸÑŸÖŸàÿßŸÅŸÇÿ©
      allow update: if (resource.data.photographer_id == request.auth.uid && 
                        request.resource.data.diff(resource.data).changedKeys().hasOnly(['tags'])) ||
                       hasAdminAccess();
      
      // ÿßŸÑÿ≠ÿ∞ŸÅ: ÿßŸÑŸÖÿµŸàÿ± ÿßŸÑŸÖÿßŸÑŸÉ ÿ£Ÿà Admin
      allow delete: if resource.data.photographer_id == request.auth.uid ||
                       isAdmin();
    }
    
    // ==========================================
    // üìÇ CONTENT_CATEGORIES COLLECTION (ÿ™ÿµŸÜŸäŸÅÿßÿ™ ÿßŸÑŸÖÿ≠ÿ™ŸàŸâ)
    // ==========================================
    match /content_categories/{categoryId} {
      // ÿßŸÑŸÇÿ±ÿßÿ°ÿ©: ÿ¨ŸÖŸäÿπ ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖŸäŸÜ ÿßŸÑŸÖÿµÿ±ÿ≠ ŸÑŸáŸÖ
      allow read: if isAuthenticated();
      
      // ÿßŸÑÿ•ŸÜÿ¥ÿßÿ° ŸàÿßŸÑÿ™ÿ≠ÿØŸäÿ´ ŸàÿßŸÑÿ≠ÿ∞ŸÅ: Admin ŸÅŸÇÿ∑
      allow create, update, delete: if hasAdminAccess();
    }
    
    // ==========================================
    // üí∞ PAYMENTS COLLECTION (ÿßŸÑŸÖÿØŸÅŸàÿπÿßÿ™)
    // ==========================================
    match /payments/{paymentId} {
      // ÿßŸÑŸÇÿ±ÿßÿ°ÿ©: ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖ ÿßŸÑŸÖÿπŸÜŸä ÿ£Ÿà ÿßŸÑŸÖÿØÿ±ÿßÿ°
      allow read: if resource.data.user_id == request.auth.uid ||
                     hasAdminAccess();
      
      // ÿßŸÑÿ•ŸÜÿ¥ÿßÿ°: Admin ÿ£Ÿà Marketing Coordinator
      allow create: if hasAdminAccess();
      
      // ÿßŸÑÿ™ÿ≠ÿØŸäÿ´: Admin ŸÅŸÇÿ∑ (ŸÑŸÑÿ≠ÿßŸÑÿ© ŸàÿßŸÑŸÖÿπÿßŸÑÿ¨ÿ©)
      allow update: if hasAdminAccess();
      
      // ÿßŸÑÿ≠ÿ∞ŸÅ: Admin ŸÅŸÇÿ∑
      allow delete: if isAdmin();
    }
    
    // ==========================================
    // üé• EQUIPMENT COLLECTION (ÿßŸÑŸÖÿπÿØÿßÿ™)
    // ==========================================
    match /equipment/{equipmentId} {
      // ÿßŸÑŸÇÿ±ÿßÿ°ÿ©: ÿ¨ŸÖŸäÿπ ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖŸäŸÜ ÿßŸÑŸÖÿµÿ±ÿ≠ ŸÑŸáŸÖ
      allow read: if isAuthenticated();
      
      // ÿßŸÑÿ•ŸÜÿ¥ÿßÿ° ŸàÿßŸÑÿ™ÿ≠ÿØŸäÿ´: Admin ÿ£Ÿà Marketing Coordinator ÿ£Ÿà ÿßŸÑŸÖÿßŸÑŸÉ
      allow create, update: if hasAdminAccess() ||
                               (isPhotographer() && resource.data.owner_id == request.auth.uid);
      
      // ÿßŸÑÿ≠ÿ∞ŸÅ: Admin ÿ£Ÿà ÿßŸÑŸÖÿßŸÑŸÉ
      allow delete: if isAdmin() ||
                       (isPhotographer() && resource.data.owner_id == request.auth.uid);
    }
    
    // ==========================================
    // üîî NOTIFICATIONS COLLECTION (ÿßŸÑÿ•ÿ¥ÿπÿßÿ±ÿßÿ™)
    // ==========================================
    match /notifications/{notificationId} {
      // ÿßŸÑŸÇÿ±ÿßÿ°ÿ©: ÿßŸÑŸÖÿ≥ÿ™ŸÇÿ®ŸÑ ÿßŸÑŸÖÿ≠ÿØÿØ ÿ£Ÿà ÿßŸÑŸÖÿØÿ±ÿßÿ°
      allow read: if resource.data.user_id == request.auth.uid ||
                     hasAdminAccess();
      
      // ÿßŸÑÿ•ŸÜÿ¥ÿßÿ°: ÿßŸÑŸÜÿ∏ÿßŸÖ (Admin) ÿ£Ÿà Marketing Coordinator
      allow create: if hasAdminAccess();
      
      // ÿßŸÑÿ™ÿ≠ÿØŸäÿ´: ÿßŸÑŸÖÿ≥ÿ™ŸÇÿ®ŸÑ ŸÑÿ™ÿ≠ÿØŸäÿØ ÿßŸÑŸÇÿ±ÿßÿ°ÿ©ÿå ÿ£Ÿà ÿßŸÑŸÖÿØÿ±ÿßÿ°
      allow update: if (resource.data.user_id == request.auth.uid && 
                        request.resource.data.diff(resource.data).changedKeys().hasOnly(['is_read', 'status'])) ||
                       hasAdminAccess();
      
      // ÿßŸÑÿ≠ÿ∞ŸÅ: Admin ŸÅŸÇÿ∑
      allow delete: if isAdmin();
    }
    
    // ==========================================
    // üì± PHONE_VERIFICATIONS COLLECTION (ÿ™ÿ≠ŸÇŸÇ ÿßŸÑŸáŸàÿßÿ™ŸÅ)
    // ==========================================
    match /phone_verifications/{verificationId} {
      // ÿßŸÑŸÇÿ±ÿßÿ°ÿ©: ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖ ÿßŸÑŸÖÿßŸÑŸÉ ŸÑŸÑÿ±ŸÇŸÖ ÿ£Ÿà ÿßŸÑŸÖÿØÿ±ÿßÿ°
      allow read: if resource.data.user_id == request.auth.uid ||
                     hasAdminAccess();
      
      // ÿßŸÑÿ•ŸÜÿ¥ÿßÿ°: ÿ£Ÿä ŸÖÿ≥ÿ™ÿÆÿØŸÖ ŸÖÿµÿ±ÿ≠ ŸÑŸá ŸÑŸÑÿ™ÿ≥ÿ¨ŸäŸÑÿå ÿ£Ÿà ÿßŸÑŸÜÿ∏ÿßŸÖ
      allow create: if isAuthenticated() || hasAdminAccess();
      
      // ÿßŸÑÿ™ÿ≠ÿØŸäÿ´: ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖ ÿßŸÑŸÖÿßŸÑŸÉ ŸÑÿ™ÿ≠ÿØŸäÿ´ ÿ≠ÿßŸÑÿ© ÿßŸÑÿ™ÿ≠ŸÇŸÇÿå ÿ£Ÿà ÿßŸÑŸÜÿ∏ÿßŸÖ
      allow update: if resource.data.user_id == request.auth.uid ||
                       hasAdminAccess();
      
      // ÿßŸÑÿ≠ÿ∞ŸÅ: ÿßŸÑŸÜÿ∏ÿßŸÖ ŸÅŸÇÿ∑ ŸÑŸÑÿ™ŸÜÿ∏ŸäŸÅ ÿßŸÑÿ™ŸÑŸÇÿßÿ¶Ÿä
      allow delete: if hasAdminAccess();
    }
    
    // ==========================================
    // üîê AUTH_METHODS COLLECTION (ÿ∑ÿ±ŸÇ ÿßŸÑŸÖÿµÿßÿØŸÇÿ©)
    // ==========================================
    match /auth_methods/{methodId} {
      // ÿßŸÑŸÇÿ±ÿßÿ°ÿ©: ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖ ÿßŸÑŸÖÿßŸÑŸÉ ÿ£Ÿà ÿßŸÑŸÖÿØÿ±ÿßÿ°
      allow read: if resource.data.user_id == request.auth.uid ||
                     hasAdminAccess();
      
      // ÿßŸÑÿ•ŸÜÿ¥ÿßÿ°: ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖ ŸÜŸÅÿ≥Ÿá ÿ£Ÿà ÿßŸÑŸÜÿ∏ÿßŸÖ
      allow create: if request.resource.data.user_id == request.auth.uid ||
                       hasAdminAccess();
      
      // ÿßŸÑÿ™ÿ≠ÿØŸäÿ´: ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖ ÿßŸÑŸÖÿßŸÑŸÉ ÿ£Ÿà ÿßŸÑŸÜÿ∏ÿßŸÖ ŸÑÿ™ÿ≠ÿØŸäÿ´ ÿ≠ÿßŸÑÿ© ÿßŸÑÿ™ÿ≠ŸÇŸÇ
      allow update: if resource.data.user_id == request.auth.uid ||
                       hasAdminAccess();
      
      // ÿßŸÑÿ≠ÿ∞ŸÅ: ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖ ÿßŸÑŸÖÿßŸÑŸÉ (ŸÑÿ≠ÿ∞ŸÅ ÿ∑ÿ±ŸäŸÇÿ© ŸÖÿµÿßÿØŸÇÿ©) ÿ£Ÿà Admin
      allow delete: if resource.data.user_id == request.auth.uid ||
                       isAdmin();
    }
    
    // ==========================================
    // üé≠ ROLE_APPLICATIONS COLLECTION (ÿ∑ŸÑÿ®ÿßÿ™ ÿßŸÑÿ£ÿØŸàÿßÿ±)
    // ==========================================
    match /role_applications/{applicationId} {
      // ÿßŸÑŸÇÿ±ÿßÿ°ÿ©: ŸÖŸÇÿØŸÖ ÿßŸÑÿ∑ŸÑÿ® ÿ£Ÿà ÿßŸÑŸÖÿØÿ±ÿßÿ°
      allow read: if resource.data.user_id == request.auth.uid ||
                     hasAdminAccess();
      
      // ÿßŸÑÿ•ŸÜÿ¥ÿßÿ°: ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖ ŸÜŸÅÿ≥Ÿá ŸÑÿ™ŸÇÿØŸäŸÖ ÿ∑ŸÑÿ® ÿØŸàÿ±
      allow create: if request.resource.data.user_id == request.auth.uid;
      
      // ÿßŸÑÿ™ÿ≠ÿØŸäÿ´: Admin ŸÅŸÇÿ∑ ŸÑŸÑŸÖŸàÿßŸÅŸÇÿ© ÿ£Ÿà ÿßŸÑÿ±ŸÅÿ∂
      allow update: if hasAdminAccess();
      
      // ÿßŸÑÿ≠ÿ∞ŸÅ: Admin ŸÅŸÇÿ∑
      allow delete: if isAdmin();
    }
    
    // ==========================================
    // üìú OTP_LOGS COLLECTION (ÿ≥ÿ¨ŸÑ ÿ±ŸÖŸàÿ≤ OTP)
    // ==========================================
    match /otp_logs/{logId} {
      // ÿßŸÑŸÇÿ±ÿßÿ°ÿ©: Admin ŸÅŸÇÿ∑ ŸÑŸÑŸÖÿ±ÿßŸÇÿ®ÿ© ŸàÿßŸÑÿ™ÿ≠ŸÑŸäŸÑ
      allow read: if hasAdminAccess();
      
      // ÿßŸÑÿ•ŸÜÿ¥ÿßÿ°: ÿßŸÑŸÜÿ∏ÿßŸÖ ŸÅŸÇÿ∑ ÿπŸÜÿØ ÿ•ÿ±ÿ≥ÿßŸÑ OTP
      allow create: if hasAdminAccess();
      
      // ÿßŸÑÿ™ÿ≠ÿØŸäÿ´: ÿßŸÑŸÜÿ∏ÿßŸÖ ŸÅŸÇÿ∑ ŸÑÿ™ÿ≠ÿØŸäÿ´ ÿ≠ÿßŸÑÿ© ÿßŸÑÿ™ÿ≥ŸÑŸäŸÖ
      allow update: if hasAdminAccess();
      
      // ÿßŸÑÿ≠ÿ∞ŸÅ: Admin ŸÅŸÇÿ∑ ŸÑŸÑÿ™ŸÜÿ∏ŸäŸÅ
      allow delete: if isAdmin();
    }
    
    // ==========================================
    // üìä AUTH_ACTIVITY_LOGS COLLECTION (ÿ≥ÿ¨ŸÑ ŸÜÿ¥ÿßÿ∑ ÿßŸÑŸÖÿµÿßÿØŸÇÿ©)
    // ==========================================
    match /auth_activity_logs/{activityId} {
      // ÿßŸÑŸÇÿ±ÿßÿ°ÿ©: ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖ ÿßŸÑŸÖÿßŸÑŸÉ ŸÑŸÑŸÜÿ¥ÿßÿ∑ ÿ£Ÿà ÿßŸÑŸÖÿØÿ±ÿßÿ°
      allow read: if resource.data.user_id == request.auth.uid ||
                     hasAdminAccess();
      
      // ÿßŸÑÿ•ŸÜÿ¥ÿßÿ°: ÿßŸÑŸÜÿ∏ÿßŸÖ ŸÅŸÇÿ∑ ŸÑÿ™ÿ≥ÿ¨ŸäŸÑ ÿßŸÑŸÜÿ¥ÿßÿ∑
      allow create: if hasAdminAccess();
      
      // ÿßŸÑÿ™ÿ≠ÿØŸäÿ´: ÿßŸÑŸÜÿ∏ÿßŸÖ ŸÅŸÇÿ∑ (ÿπÿßÿØÿ© ŸÑÿß ŸäŸèÿ≠ÿØÿ´)
      allow update: if hasAdminAccess();
      
      // ÿßŸÑÿ≠ÿ∞ŸÅ: Admin ŸÅŸÇÿ∑ ŸÑŸÑÿ™ŸÜÿ∏ŸäŸÅ
      allow delete: if isAdmin();
    }
    
    // ==========================================
    // üóëÔ∏è CATCH-ALL RULE (ŸÇÿßÿπÿØÿ© ÿßŸÑÿ£ŸÖÿßŸÜ ÿßŸÑÿßŸÅÿ™ÿ±ÿßÿ∂Ÿäÿ©)
    // ==========================================
    // ÿ±ŸÅÿ∂ ÿßŸÑŸàÿµŸàŸÑ ŸÑÿ£Ÿä collection ÿ∫Ÿäÿ± ŸÖÿ≠ÿØÿØ ÿµÿ±ÿßÿ≠ÿ©
    match /{document=**} {
      allow read, write: if false;
    }
  }
}

// ==========================================
// üìù ŸÖŸÑÿßÿ≠ÿ∏ÿßÿ™ ÿßŸÑŸÜÿ≥ÿÆÿ© ÿßŸÑŸÖÿ®ÿ≥ÿ∑ÿ©:
// ==========================================
//
// ‚úÖ ŸÖÿ™ŸàÿßŸÅŸÇ 100% ŸÖÿπ ÿßŸÑÿ£ŸÜŸàÿßÿπ ÿßŸÑŸÖÿ®ÿ≥ÿ∑ÿ©
// ‚úÖ ŸäÿØÿπŸÖ 10 collections ŸÅŸÇÿ∑ (ÿ®ÿØŸÑÿßŸã ŸÖŸÜ 19)
// ‚úÖ ÿµŸÑÿßÿ≠Ÿäÿßÿ™ ŸÖÿ®ÿ≥ÿ∑ÿ© ŸàŸàÿßÿ∂ÿ≠ÿ©
// ‚úÖ ÿ£ŸÖÿßŸÜ ŸÖÿ≠ŸÉŸÖ ŸÖÿπ ŸÖÿ±ŸàŸÜÿ© ŸÑŸÑÿßÿ≥ÿ™ÿÆÿØÿßŸÖ
// ‚úÖ admin ÿ®ÿØŸÑÿßŸã ŸÖŸÜ super_admin
// ‚úÖ photographer_info ÿ®ÿØŸÑÿßŸã ŸÖŸÜ photographer_profiles
// ‚úÖ campaigns ŸÖŸàÿ≠ÿØÿ© (ÿ®ÿØŸÑÿßŸã ŸÖŸÜ smart_campaigns + campaign_tasks)
// ‚úÖ notifications ŸÖŸàÿ≠ÿØÿ© (ÿ®ÿØŸÑÿßŸã ŸÖŸÜ campaign_notifications)
// ‚úÖ payments Ÿà equipment ŸÖÿ∂ÿßŸÅÿ©
//
// üîÑ ÿ¢ÿÆÿ± ÿ™ÿ≠ÿØŸäÿ´: ÿØŸäÿ≥ŸÖÿ®ÿ± 19, 2024
// üë®‚ÄçÔøΩÔøΩ ÿßŸÑŸÖÿ∑Ÿàÿ±: ÿπŸÑŸä ÿ¨ŸàÿØÿ™ 
END OF FILE: firestore.rules
========================

üìÅ FILE: storage.rules
======================
rules_version = '2';

// üóÑÔ∏è ŸÇŸàÿßŸÜŸäŸÜ ÿ£ŸÖÿßŸÜ Firebase Storage - Depth Studio
// üìÖ ŸÖÿ≠ÿØÿ´: ŸäŸàŸÜŸäŸà 2025
// üë§ ÿßŸÑŸÖÿ∑Ÿàÿ±: ÿπŸÑŸä ÿ¨ŸàÿØÿ™
// üéØ ÿ≠ŸÖÿßŸäÿ© ÿ¥ÿßŸÖŸÑÿ© ŸÑŸÑŸÖŸÑŸÅÿßÿ™ ŸàÿßŸÑÿµŸàÿ±

service firebase.storage {
  match /b/{bucket}/o {
    
    // ==========================================
    // üõ†Ô∏è HELPER FUNCTIONS (ÿØŸàÿßŸÑ ŸÖÿ≥ÿßÿπÿØÿ©)
    // ==========================================
    
    // ÿßŸÑÿ™ÿ≠ŸÇŸÇ ŸÖŸÜ ÿ™ÿ≥ÿ¨ŸäŸÑ ÿßŸÑÿØÿÆŸàŸÑ
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // ÿßŸÑÿ™ÿ≠ŸÇŸÇ ŸÖŸÜ ŸÜŸàÿπ ÿßŸÑŸÖŸÑŸÅ ÿßŸÑŸÖÿ≥ŸÖŸàÿ≠
    function isAllowedImageType() {
      return resource.contentType.matches('image/.*') && 
             resource.contentType in ['image/jpeg', 'image/png', 'image/webp', 'image/gif'];
    }
    
    // ÿßŸÑÿ™ÿ≠ŸÇŸÇ ŸÖŸÜ ÿ≠ÿ¨ŸÖ ÿßŸÑŸÖŸÑŸÅ (ÿ£ŸÇŸÑ ŸÖŸÜ 10MB)
    function isValidSize() {
      return resource.size < 10 * 1024 * 1024;
    }
    
    // ÿßŸÑÿ™ÿ≠ŸÇŸÇ ŸÖŸÜ ŸÖŸÑŸÉŸäÿ© ÿßŸÑŸÖŸÑŸÅ
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // ==========================================
    // üì∏ ŸÖÿ¨ŸÑÿØ ÿµŸàÿ± ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖŸäŸÜ (Profile Pictures)
    // ==========================================
    match /users/{userId}/profile/{fileName} {
      // ÿßŸÑŸÇÿ±ÿßÿ°ÿ©: ÿ£Ÿä ŸÖÿ≥ÿ™ÿÆÿØŸÖ ŸÖÿ≥ÿ¨ŸÑ ÿØÿÆŸàŸÑ
      allow read: if isAuthenticated();
      
      // ÿßŸÑŸÉÿ™ÿßÿ®ÿ©: ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖ ŸÜŸÅÿ≥Ÿá ŸÅŸÇÿ∑
      allow write: if isAuthenticated() && 
                      isOwner(userId) && 
                      isAllowedImageType() && 
                      isValidSize();
    }
    
    // ==========================================
    // üé® ŸÖÿ¨ŸÑÿØ ŸÖÿ≠ÿ™ŸàŸâ ÿßŸÑÿ≠ŸÖŸÑÿßÿ™ (Content)
    // ==========================================
    match /content/{contentId}/{fileName} {
      // ÿßŸÑŸÇÿ±ÿßÿ°ÿ©: ÿ£Ÿä ŸÖÿ≥ÿ™ÿÆÿØŸÖ ŸÖÿ≥ÿ¨ŸÑ ÿØÿÆŸàŸÑ (ŸÑŸÑŸÖÿπÿßŸäŸÜÿ©)
      allow read: if isAuthenticated();
      
      // ÿßŸÑŸÉÿ™ÿßÿ®ÿ©: ÿßŸÑŸÖÿµŸàÿ±ŸäŸÜ ŸàÿßŸÑŸÖÿØÿ±ÿßÿ° ŸÅŸÇÿ∑
      allow write: if isAuthenticated() && 
                      isAllowedImageType() && 
                      isValidSize();
    }
    
    // ==========================================
    // üè¢ ŸÖÿ¨ŸÑÿØ ÿ¥ÿπÿßÿ±ÿßÿ™ ÿßŸÑÿ®ÿ±ÿßŸÜÿØÿßÿ™ (Brand Logos)  
    // ==========================================
    match /brands/{brandId}/logo/{fileName} {
      // ÿßŸÑŸÇÿ±ÿßÿ°ÿ©: ÿ£Ÿä ŸÖÿ≥ÿ™ÿÆÿØŸÖ ŸÖÿ≥ÿ¨ŸÑ ÿØÿÆŸàŸÑ
      allow read: if isAuthenticated();
      
      // ÿßŸÑŸÉÿ™ÿßÿ®ÿ©: ÿßŸÑŸÖÿØÿ±ÿßÿ° ŸÅŸÇÿ∑
      allow write: if isAuthenticated() && 
                      isAllowedImageType() && 
                      isValidSize();
    }
    
    // ==========================================
    // üì± ŸÖÿ¨ŸÑÿØ ÿßŸÑŸÖÿ±ŸÅŸÇÿßÿ™ ÿßŸÑÿπÿßŸÖÿ© (General Uploads)
    // ==========================================
    match /uploads/{userId}/{fileName} {
      // ÿßŸÑŸÇÿ±ÿßÿ°ÿ©: ÿßŸÑŸÖÿßŸÑŸÉ ÿ£Ÿà ÿßŸÑŸÖÿØÿ±ÿßÿ°
      allow read: if isAuthenticated() && isOwner(userId);
      
      // ÿßŸÑŸÉÿ™ÿßÿ®ÿ©: ÿßŸÑŸÖÿßŸÑŸÉ ŸÅŸÇÿ∑
      allow write: if isAuthenticated() && 
                      isOwner(userId) && 
                      isAllowedImageType() && 
                      isValidSize();
    }
    
    // ==========================================
    // üé• ŸÖÿ¨ŸÑÿØ ŸÖÿπÿØÿßÿ™ ÿßŸÑÿ™ÿµŸàŸäÿ± (Equipment Images)
    // ==========================================
    match /equipment/{equipmentId}/{fileName} {
      // ÿßŸÑŸÇÿ±ÿßÿ°ÿ©: ÿ¨ŸÖŸäÿπ ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖŸäŸÜ ÿßŸÑŸÖÿ≥ÿ¨ŸÑŸäŸÜ
      allow read: if isAuthenticated();
      
      // ÿßŸÑŸÉÿ™ÿßÿ®ÿ©: ÿßŸÑŸÖÿµŸàÿ±ŸäŸÜ ŸàÿßŸÑŸÖÿØÿ±ÿßÿ°
      allow write: if isAuthenticated() && 
                      isAllowedImageType() && 
                      isValidSize();
    }
    
    // ==========================================
    // üìã ŸÖÿ¨ŸÑÿØ ÿßŸÑŸÖÿ≥ÿ™ŸÜÿØÿßÿ™ (Documents) - PDF Ÿàÿ∫Ÿäÿ±Ÿáÿß
    // ==========================================
    match /documents/{userId}/{fileName} {
      // ÿßŸÑŸÇÿ±ÿßÿ°ÿ©: ÿßŸÑŸÖÿßŸÑŸÉ ŸÅŸÇÿ∑
      allow read: if isAuthenticated() && isOwner(userId);
      
      // ÿßŸÑŸÉÿ™ÿßÿ®ÿ©: ÿßŸÑŸÖÿßŸÑŸÉ ŸÅŸÇÿ∑ ŸÖÿπ ŸÇŸäŸàÿØ ŸÜŸàÿπ ÿßŸÑŸÖŸÑŸÅ
      allow write: if isAuthenticated() && 
                      isOwner(userId) && 
                      (resource.contentType in ['application/pdf', 'text/plain', 'application/msword']) &&
                      resource.size < 5 * 1024 * 1024; // 5MB ŸÑŸÑŸÖÿ≥ÿ™ŸÜÿØÿßÿ™
    }
    
    // ==========================================
    // üóëÔ∏è ŸÖŸÜÿπ ÿßŸÑŸàÿµŸàŸÑ ŸÑÿ£Ÿä ŸÖÿ≥ÿßÿ± ÿ∫Ÿäÿ± ŸÖÿ≠ÿØÿØ
    // ==========================================
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}

// ==========================================
// üìù ŸÖŸÑÿßÿ≠ÿ∏ÿßÿ™ ÿßŸÑÿ£ŸÖÿßŸÜ:
// ==========================================
// ‚úÖ ÿØÿπŸÖ ÿ£ŸÜŸàÿßÿπ ÿßŸÑÿµŸàÿ±: JPEG, PNG, WebP, GIF
// ‚úÖ ÿ≠ÿØ ÿ£ŸÇÿµŸâ 10MB ŸÑŸÑÿµŸàÿ±
// ‚úÖ ÿ≠ÿØ ÿ£ŸÇÿµŸâ 5MB ŸÑŸÑŸÖÿ≥ÿ™ŸÜÿØÿßÿ™  
// ‚úÖ ÿ≠ŸÖÿßŸäÿ© ŸÖŸÜ ÿßŸÑŸàÿµŸàŸÑ ÿ∫Ÿäÿ± ÿßŸÑŸÖÿµÿ±ÿ≠
// ‚úÖ ŸÅÿµŸÑ Ÿàÿßÿ∂ÿ≠ ÿ®ŸäŸÜ ŸÖÿ¨ŸÑÿØÿßÿ™ ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖŸäŸÜ
// ‚úÖ ÿµŸÑÿßÿ≠Ÿäÿßÿ™ ŸÖÿ™ÿØÿ±ÿ¨ÿ© ÿ≠ÿ≥ÿ® ŸÜŸàÿπ ÿßŸÑŸÖÿ≠ÿ™ŸàŸâ 
END OF FILE: storage.rules
======================

üåê API CONNECTION & AUTHENTICATION:
===================================

üìÅ FILE: frontend/src/lib/firebase/config.ts
===========================================
FILE NOT FOUND

END OF FILE: frontend/src/lib/firebase/config.ts
===========================================

üìÅ FILE: frontend/src/services/api/api-client.ts
=============================================
/**
 * üåê ÿπŸÖŸäŸÑ API ŸÖŸàÿ≠ÿØ - Depth Studio
 * ==================================
 * 
 * ÿßŸÑŸÖŸÖŸäÿ≤ÿßÿ™:
 * - ÿ•ÿ∂ÿßŸÅÿ© JWT token ÿ™ŸÑŸÇÿßÿ¶ŸäÿßŸã ŸÑŸÑŸÄ headers
 * - ŸÖÿπÿßŸÑÿ¨ÿ© ÿßŸÑÿ£ÿÆÿ∑ÿßÿ° ÿ®ÿ±ÿ≥ÿßÿ¶ŸÑ ÿπÿ±ÿ®Ÿäÿ© ŸÖŸàÿ≠ÿØÿ©  
 * - ÿ¢ŸÑŸäÿ© retry ŸÑŸÑÿ£ÿÆÿ∑ÿßÿ° ÿßŸÑÿ¥ÿ®ŸÉÿ©
 * - Interceptors ŸÑŸÑÿ∑ŸÑÿ®ÿßÿ™ ŸàÿßŸÑÿßÿ≥ÿ™ÿ¨ÿßÿ®ÿßÿ™
 */

import axios, { 
  AxiosInstance, 
  AxiosRequestConfig, 
  AxiosResponse, 
  AxiosError 
} from 'axios';

// Ÿàÿßÿ¨Ÿáÿ© ÿßÿ≥ÿ™ÿ¨ÿßÿ®ÿ© API
interface ApiResponse<T> {
  data: T;
  success: boolean;
  message?: string;
}

// ======================================
// üîß ÿ•ÿπÿØÿßÿØÿßÿ™ API
// ======================================

const BASE_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:5002/depth-studio/us-central1/api';
const TIMEOUT = 30000; // 30 ÿ´ÿßŸÜŸäÿ©
const MAX_RETRIES = 1;

// ======================================
// üèóÔ∏è ÿπŸÖŸäŸÑ API ÿßŸÑŸÖŸàÿ≠ÿØ
// ======================================

class ApiClient {
  private client: AxiosInstance;
  private retryCount = 0;

  constructor() {
    this.client = axios.create({
      baseURL: BASE_URL,
      timeout: TIMEOUT,
      headers: {
        'Content-Type': 'application/json',
        'Accept': 'application/json',
      },
    });

    this.setupInterceptors();
  }

  /**
   * ÿ•ÿπÿØÿßÿØ interceptors ŸÑŸÑÿ∑ŸÑÿ®ÿßÿ™ ŸàÿßŸÑÿßÿ≥ÿ™ÿ¨ÿßÿ®ÿßÿ™
   */
  private setupInterceptors(): void {
    // Request interceptor - ÿ•ÿ∂ÿßŸÅÿ© JWT token
    this.client.interceptors.request.use(
      (config) => {
        // ÿ¨ŸÑÿ® ÿßŸÑŸÄ token ŸÖŸÜ localStorage (ÿ≥Ÿäÿ™ŸÖ ÿ±ÿ®ÿ∑Ÿá ÿ®ŸÄ AuthStore ŸÑÿßÿ≠ŸÇÿßŸã)
        const token = this.getAuthToken();
        if (token) {
          config.headers.Authorization = `Bearer ${token}`;
        }

        // ÿ•ÿ∂ÿßŸÅÿ© request_id ŸÑŸÑÿ™ÿ™ÿ®ÿπ
        config.headers['X-Request-ID'] = this.generateRequestId();
        
        return config;
      },
      (error) => {
        return Promise.reject(this.handleRequestError(error));
      }
    );

    // Response interceptor - ŸÖÿπÿßŸÑÿ¨ÿ© ÿßŸÑÿßÿ≥ÿ™ÿ¨ÿßÿ®ÿßÿ™ ŸàÿßŸÑÿ£ÿÆÿ∑ÿßÿ°
    this.client.interceptors.response.use(
      (response: AxiosResponse) => {
        return response;
      },
      async (error: AxiosError) => {
        return this.handleResponseError(error);
      }
    );
  }

  /**
   * ÿ¨ŸÑÿ® token ÿßŸÑŸÖÿµÿßÿØŸÇÿ© ŸÖŸÜ localStorage
   */
  private getAuthToken(): string | null {
    if (typeof window === 'undefined') return null;
    return localStorage.getItem('auth_token');
  }

  /**
   * ÿ™ŸàŸÑŸäÿØ ŸÖÿπÿ±ŸÅ ŸÅÿ±ŸäÿØ ŸÑŸÑÿ∑ŸÑÿ®
   */
  private generateRequestId(): string {
    return `req_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
  }

  /**
   * ŸÖÿπÿßŸÑÿ¨ÿ© ÿ£ÿÆÿ∑ÿßÿ° ÿßŸÑÿ∑ŸÑÿ®ÿßÿ™
   */
  private handleRequestError(error: unknown): Error {
    console.error('üö® ÿÆÿ∑ÿ£ ŸÅŸä ÿ•ÿπÿØÿßÿØ ÿßŸÑÿ∑ŸÑÿ®:', error);
    return new Error('ÿÆÿ∑ÿ£ ŸÅŸä ÿ•ÿπÿØÿßÿØ ÿßŸÑÿ∑ŸÑÿ®');
  }

  /**
   * ŸÖÿπÿßŸÑÿ¨ÿ© ÿ£ÿÆÿ∑ÿßÿ° ÿßŸÑÿßÿ≥ÿ™ÿ¨ÿßÿ®ÿßÿ™ ŸÖÿπ retry
   */
  private async handleResponseError(error: AxiosError): Promise<never> {
    const originalRequest = error.config;

    // Retry ŸÑŸÑÿ£ÿÆÿ∑ÿßÿ° 5xx ŸÅŸÇÿ∑
    if (
      error.response?.status && 
      error.response.status >= 500 && 
      this.retryCount < MAX_RETRIES &&
      originalRequest
    ) {
      this.retryCount++;
      console.warn(`üîÑ ÿ•ÿπÿßÿØÿ© ŸÖÿ≠ÿßŸàŸÑÿ© ${this.retryCount}/${MAX_RETRIES} ŸÑŸÑÿ∑ŸÑÿ®:`, originalRequest.url);
      
      // ÿßŸÜÿ™ÿ∏ÿßÿ± ŸÇÿµŸäÿ± ŸÇÿ®ŸÑ ÿßŸÑŸÖÿ≠ÿßŸàŸÑÿ©
      await new Promise(resolve => setTimeout(resolve, 1000));
      
      return this.client.request(originalRequest);
    }

    // ÿ•ÿπÿßÿØÿ© ÿ™ÿπŸäŸäŸÜ ÿπÿØÿßÿØ ÿßŸÑŸÖÿ≠ÿßŸàŸÑÿßÿ™
    this.retryCount = 0;

    // ŸÖÿπÿßŸÑÿ¨ÿ© ÿßŸÑÿ£ÿÆÿ∑ÿßÿ° ÿßŸÑŸÖÿÆÿ™ŸÑŸÅÿ©
    const errorMessage = this.getErrorMessage(error);
    throw new Error(errorMessage);
  }

  /**
   * ÿßÿ≥ÿ™ÿÆÿ±ÿßÿ¨ ÿ±ÿ≥ÿßŸÑÿ© ÿÆÿ∑ÿ£ ÿπÿ±ÿ®Ÿäÿ© ŸÖŸàÿ≠ÿØÿ©
   */
  private getErrorMessage(error: AxiosError): string {
    if (!error.response) {
      return 'ÿÆÿ∑ÿ£ ŸÅŸä ÿßŸÑÿßÿ™ÿµÿßŸÑ ÿ®ÿßŸÑÿÆÿßÿØŸÖ. ÿ™ÿ≠ŸÇŸÇ ŸÖŸÜ ÿßÿ™ÿµÿßŸÑ ÿßŸÑÿ•ŸÜÿ™ÿ±ŸÜÿ™.';
    }

    const status = error.response.status;
    const data = error.response.data as ApiResponse<unknown>;

    // ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ÿ±ÿ≥ÿßŸÑÿ© ÿßŸÑÿÆÿßÿØŸÖ ÿ•ÿ∞ÿß ŸÉÿßŸÜÿ™ ŸÖÿ™ŸàŸÅÿ±ÿ©
    if (data?.message) {
      return data.message;
    }

    // ÿ±ÿ≥ÿßÿ¶ŸÑ ÿßŸÅÿ™ÿ±ÿßÿ∂Ÿäÿ© ÿ≠ÿ≥ÿ® ŸÉŸàÿØ ÿßŸÑÿ≠ÿßŸÑÿ©
    switch (status) {
      case 400:
        return 'ÿßŸÑÿ®ŸäÿßŸÜÿßÿ™ ÿßŸÑŸÖÿØÿÆŸÑÿ© ÿ∫Ÿäÿ± ÿµÿ≠Ÿäÿ≠ÿ©';
      case 401:
        return 'ÿ¨ŸÑÿ≥ÿ© ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖ ŸÖŸÜÿ™ŸáŸäÿ©. Ÿäÿ±ÿ¨Ÿâ ÿ™ÿ≥ÿ¨ŸäŸÑ ÿßŸÑÿØÿÆŸàŸÑ ŸÖÿ±ÿ© ÿ£ÿÆÿ±Ÿâ';
      case 403:
        return 'ŸÑŸäÿ≥ ŸÑÿØŸäŸÉ ÿµŸÑÿßÿ≠Ÿäÿ© ŸÑŸÑŸàÿµŸàŸÑ ŸÑŸáÿ∞ÿß ÿßŸÑŸÖŸàÿ±ÿØ';
      case 404:
        return 'ÿßŸÑŸÖŸàÿ±ÿØ ÿßŸÑŸÖÿ∑ŸÑŸàÿ® ÿ∫Ÿäÿ± ŸÖŸàÿ¨ŸàÿØ';
      case 409:
        return 'ÿ™ÿπÿßÿ±ÿ∂ ŸÅŸä ÿßŸÑÿ®ŸäÿßŸÜÿßÿ™. ÿßŸÑŸÖŸàÿ±ÿØ ŸÖŸàÿ¨ŸàÿØ ŸÖÿ≥ÿ®ŸÇÿßŸã';
      case 422:
        return 'ÿßŸÑÿ®ŸäÿßŸÜÿßÿ™ ÿßŸÑŸÖÿØÿÆŸÑÿ© ŸÑÿß ÿ™ÿ∑ÿßÿ®ŸÇ ÿßŸÑŸÖÿ™ÿ∑ŸÑÿ®ÿßÿ™';
      case 429:
        return 'ÿ™ŸÖ ÿ™ÿ¨ÿßŸàÿ≤ ÿπÿØÿØ ÿßŸÑÿ∑ŸÑÿ®ÿßÿ™ ÿßŸÑŸÖÿ≥ŸÖŸàÿ≠. ÿ≠ÿßŸàŸÑ ŸÖÿ±ÿ© ÿ£ÿÆÿ±Ÿâ ŸÑÿßÿ≠ŸÇÿßŸã';
      case 500:
        return 'ÿÆÿ∑ÿ£ ÿØÿßÿÆŸÑŸä ŸÅŸä ÿßŸÑÿÆÿßÿØŸÖ. ÿ≠ÿßŸàŸÑ ŸÖÿ±ÿ© ÿ£ÿÆÿ±Ÿâ ŸÑÿßÿ≠ŸÇÿßŸã';
      case 502:
      case 503:
      case 504:
        return 'ÿßŸÑÿÆÿßÿØŸÖ ÿ∫Ÿäÿ± ŸÖÿ™ÿßÿ≠ ÿ≠ÿßŸÑŸäÿßŸã. ÿ≠ÿßŸàŸÑ ŸÖÿ±ÿ© ÿ£ÿÆÿ±Ÿâ ŸÑÿßÿ≠ŸÇÿßŸã';
      default:
        return `ÿÆÿ∑ÿ£ ÿ∫Ÿäÿ± ŸÖÿ™ŸàŸÇÿπ (${status}). ÿ≠ÿßŸàŸÑ ŸÖÿ±ÿ© ÿ£ÿÆÿ±Ÿâ`;
    }
  }

  // ======================================
  // üöÄ ÿßŸÑÿ∑ÿ±ŸÇ ÿßŸÑÿπÿßŸÖÿ© ŸÑŸÑŸÄ HTTP
  // ======================================

  /**
   * ÿ∑ŸÑÿ® GET
   */
  async get<T>(url: string, config?: AxiosRequestConfig): Promise<ApiResponse<T>> {
    const response = await this.client.get<ApiResponse<T>>(url, config);
    return response.data;
  }

  /**
   * ÿ∑ŸÑÿ® POST
   */
  async post<T>(url: string, data?: unknown, config?: AxiosRequestConfig): Promise<ApiResponse<T>> {
    const response = await this.client.post<ApiResponse<T>>(url, data, config);
    return response.data;
  }

  /**
   * ÿ∑ŸÑÿ® PUT
   */
  async put<T>(url: string, data?: unknown, config?: AxiosRequestConfig): Promise<ApiResponse<T>> {
    const response = await this.client.put<ApiResponse<T>>(url, data, config);
    return response.data;
  }

  /**
   * ÿ∑ŸÑÿ® PATCH
   */
  async patch<T>(url: string, data?: unknown, config?: AxiosRequestConfig): Promise<ApiResponse<T>> {
    const response = await this.client.patch<ApiResponse<T>>(url, data, config);
    return response.data;
  }

  /**
   * ÿ∑ŸÑÿ® DELETE
   */
  async delete<T>(url: string, config?: AxiosRequestConfig): Promise<ApiResponse<T>> {
    const response = await this.client.delete<ApiResponse<T>>(url, config);
    return response.data;
  }

  /**
   * ÿ™ÿ≠ÿØŸäÿ´ token ÿßŸÑŸÖÿµÿßÿØŸÇÿ©
   */
  setAuthToken(token: string | null): void {
    if (typeof window === 'undefined') return;
    
    if (token) {
      localStorage.setItem('auth_token', token);
    } else {
      localStorage.removeItem('auth_token');
    }
  }

  /**
   * ŸÖÿ≥ÿ≠ token ÿßŸÑŸÖÿµÿßÿØŸÇÿ©
   */
  clearAuthToken(): void {
    this.setAuthToken(null);
  }
}

// ======================================
// üì§ ÿ™ÿµÿØŸäÿ± ŸÖÿ´ŸäŸÑ Ÿàÿ≠ŸäÿØ
// ======================================

export const apiClient = new ApiClient();
export default apiClient; 
END OF FILE: frontend/src/services/api/api-client.ts
=============================================

üîê BACKEND KEYS & SERVICE ACCOUNTS:
===================================

üìÅ DIRECTORY: backend/keys/
===========================
total 8
drwxr-xr-x@  3 alijawdat  staff    96 Jun  8 01:38 .
drwxr-xr-x@ 17 alijawdat  staff   544 Jun 10 20:11 ..
-rw-r--r--@  1 alijawdat  staff  2402 Jun  8 01:39 serviceAccountKey.json

KEYS ANALYSIS: Service account keys present for Firebase Admin SDK authentication
END OF DIRECTORY: backend/keys/
===========================

üìä PROJECT STATUS & GIT INFO:
=============================

üöÄ GIT STATUS:
==============
On branch main
Your branch is up to date with 'origin/main'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   deployment_analysis.txt

no changes added to commit (use "git add" and/or "git commit -a")


üìã SOLUTION IMPLEMENTED:
=========================

üö® PROBLEM DIAGNOSIS:
Firebase App Hosting ignores buildCommand when Next.js is detected
Framework adapter doesn't support monorepo + middleware properly
PATCH V7 never executed - buildCommand completely bypassed

‚úÖ SOLUTION IMPLEMENTED:
Switched to Firebase Hosting Classic + GitHub Actions
Full control over build process
Middleware-manifest.json properly handled
Monorepo structure fully supported

üìÅ NEW FILES CREATED:
.github/workflows/deploy.yml - GitHub Actions workflow
firebase.json - Firebase Hosting configuration
functions/package.json - Cloud Functions package
functions/index.js - Next.js Cloud Function
DEPLOYMENT_GUIDE.md - Complete deployment guide
apphosting.yaml -> apphosting.yaml.disabled

üîÑ NEXT STEPS:
1. Setup Firebase token: firebase login:ci
2. Add GitHub Secrets (FIREBASE_TOKEN, etc.)
3. Push to main branch for automatic deployment
4. Monitor at: https://github.com/USERNAME/Depth-app/actions
5. Access app at: https://depth-studio.web.app

