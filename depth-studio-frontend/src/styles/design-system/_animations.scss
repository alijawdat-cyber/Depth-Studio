/**
 * ==============================================
 * DEPTH STUDIO DESIGN SYSTEM - ANIMATIONS & TRANSITIONS
 * ==============================================
 * نظام الحركات والانتقالات الموحد يشمل:
 * - متغيرات زمنية مدروسة
 * - انتقالات ناعمة وطبيعية
 * - حركات تفاعلية للأزرار والقوائم
 * - رسوم متحركة للتحميل والحالات
 */

// === ROOT ANIMATION VARIABLES ===
:root {
  // === TIMING VARIABLES ===
  // أزمنة الانتقالات بناءً على Material Design
  --duration-fast: 150ms;        // حركات سريعة للتأثيرات البسيطة
  --duration-normal: 250ms;      // الانتقالات العادية
  --duration-slow: 350ms;        // الانتقالات المعقدة
  --duration-slower: 500ms;      // الحركات البطيئة للمؤثرات الكبيرة

  // === EASING FUNCTIONS ===
  // منحنيات الحركة الطبيعية
  --ease-out: cubic-bezier(0.4, 0, 0.2, 1);        // خروج سلس
  --ease-in: cubic-bezier(0.4, 0, 1, 1);           // دخول سلس
  --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);     // دخول وخروج سلس
  --ease-sharp: cubic-bezier(0.4, 0, 0.6, 1);      // حاد ومحدد
  --ease-bounce: cubic-bezier(0.68, -0.55, 0.265, 1.55); // ارتداد لطيف

  // === TRANSFORM ORIGINS ===
  --origin-center: center center;
  --origin-top: center top;
  --origin-bottom: center bottom;
  --origin-left: left center;
  --origin-right: right center;

  // === ANIMATION DELAYS ===
  --delay-0: 0ms;
  --delay-1: 50ms;
  --delay-2: 100ms;
  --delay-3: 150ms;
  --delay-4: 200ms;
}

// === SCSS VARIABLES ===
// متغيرات SCSS للاستخدام في Mixins

$durations: (
  fast: var(--duration-fast),
  normal: var(--duration-normal),
  slow: var(--duration-slow),
  slower: var(--duration-slower)
) !default;

$easings: (
  out: var(--ease-out),
  in: var(--ease-in),
  in-out: var(--ease-in-out),
  sharp: var(--ease-sharp),
  bounce: var(--ease-bounce)
) !default;

// === KEYFRAMES ANIMATIONS ===
// حركات مفاتيح للاستخدام المباشر

// Fade animations
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInDown {
  from {
    opacity: 0;
    transform: translateY(-20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInLeft {
  from {
    opacity: 0;
    transform: translateX(-20px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes fadeInRight {
  from {
    opacity: 0;
    transform: translateX(20px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

// Scale animations
@keyframes scaleIn {
  from {
    opacity: 0;
    transform: scale(0.8);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes scaleOut {
  from {
    opacity: 1;
    transform: scale(1);
  }
  to {
    opacity: 0;
    transform: scale(0.8);
  }
}

@keyframes scaleInCenter {
  from {
    opacity: 0;
    transform: scale(0.5);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

// Slide animations
@keyframes slideInUp {
  from {
    transform: translateY(100%);
  }
  to {
    transform: translateY(0);
  }
}

@keyframes slideInDown {
  from {
    transform: translateY(-100%);
  }
  to {
    transform: translateY(0);
  }
}

@keyframes slideInLeft {
  from {
    transform: translateX(-100%);
  }
  to {
    transform: translateX(0);
  }
}

@keyframes slideInRight {
  from {
    transform: translateX(100%);
  }
  to {
    transform: translateX(0);
  }
}

// Rotate animations
@keyframes rotateIn {
  from {
    opacity: 0;
    transform: rotate(-180deg);
  }
  to {
    opacity: 1;
    transform: rotate(0);
  }
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

// Pulse animations
@keyframes pulse {
  0%, 100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
}

@keyframes heartbeat {
  0%, 50%, 100% {
    transform: scale(1);
  }
  5%, 45% {
    transform: scale(1.1);
  }
}

// Shake animations
@keyframes shake {
  0%, 100% {
    transform: translateX(0);
  }
  10%, 30%, 50%, 70%, 90% {
    transform: translateX(-5px);
  }
  20%, 40%, 60%, 80% {
    transform: translateX(5px);
  }
}

// Loading animations
@keyframes loading {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

@keyframes loadingDots {
  0%, 20% {
    opacity: 0;
    transform: scale(1);
  }
  50% {
    opacity: 1;
    transform: scale(1.2);
  }
  100% {
    opacity: 0;
    transform: scale(1);
  }
}

@keyframes loadingPulse {
  0% {
    opacity: 1;
    transform: scale(1);
  }
  50% {
    opacity: 0.5;
    transform: scale(1.1);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}

// === ANIMATION MIXINS ===
// خلطات للاستخدام السهل مع الحركات

// Basic transition mixin
@mixin transition($property: all, $duration: normal, $easing: out, $delay: 0ms) {
  $duration-value: map-get($durations, $duration);
  $easing-value: map-get($easings, $easing);
  
  @if not $duration-value {
    $duration-value: $duration;
  }
  
  @if not $easing-value {
    $easing-value: $easing;
  }
  
  transition: #{$property} #{$duration-value} #{$easing-value} #{$delay};
}

// Multiple transitions
@mixin transitions($transitions...) {
  $result: ();
  
  @each $transition in $transitions {
    $result: append($result, $transition, comma);
  }
  
  transition: $result;
}

// Animation mixin
@mixin animation($name, $duration: normal, $easing: out, $delay: 0ms, $iteration: 1, $direction: normal, $fill-mode: both) {
  $duration-value: map-get($durations, $duration);
  $easing-value: map-get($easings, $easing);
  
  @if not $duration-value {
    $duration-value: $duration;
  }
  
  @if not $easing-value {
    $easing-value: $easing;
  }
  
  animation: #{$name} #{$duration-value} #{$easing-value} #{$delay} #{$iteration} #{$direction} #{$fill-mode};
}

// Transform mixin
@mixin transform($transforms...) {
  transform: $transforms;
}

// === UTILITY CLASSES ===
// فئات مساعدة للاستخدام المباشر في HTML

// Transition utilities
.transition-all {
  @include transition(all, normal, out);
}

.transition-fast {
  @include transition(all, fast, out);
}

.transition-slow {
  @include transition(all, slow, out);
}

.transition-colors {
  @include transition((color, background-color, border-color), normal, out);
}

.transition-transform {
  @include transition(transform, normal, out);
}

.transition-opacity {
  @include transition(opacity, normal, out);
}

// Animation utilities
.animate-fade-in {
  @include animation(fadeIn, normal, out);
}

.animate-fade-out {
  @include animation(fadeOut, normal, out);
}

.animate-fade-in-up {
  @include animation(fadeInUp, normal, out);
}

.animate-fade-in-down {
  @include animation(fadeInDown, normal, out);
}

.animate-fade-in-left {
  @include animation(fadeInLeft, normal, out);
}

.animate-fade-in-right {
  @include animation(fadeInRight, normal, out);
}

.animate-scale-in {
  @include animation(scaleIn, normal, out);
}

.animate-scale-out {
  @include animation(scaleOut, normal, out);
}

.animate-slide-in-up {
  @include animation(slideInUp, normal, out);
}

.animate-slide-in-down {
  @include animation(slideInDown, normal, out);
}

.animate-slide-in-left {
  @include animation(slideInLeft, normal, out);
}

.animate-slide-in-right {
  @include animation(slideInRight, normal, out);
}

.animate-rotate-in {
  @include animation(rotateIn, normal, out);
}

.animate-spin {
  @include animation(spin, 1s, linear, 0ms, infinite);
}

.animate-pulse {
  @include animation(pulse, 2s, in-out, 0ms, infinite);
}

.animate-heartbeat {
  @include animation(heartbeat, 1.5s, in-out, 0ms, infinite);
}

.animate-shake {
  @include animation(shake, 0.8s, in-out);
}

.animate-loading {
  @include animation(loading, 1s, linear, 0ms, infinite);
}

.animate-loading-dots {
  @include animation(loadingDots, 1.4s, in-out, 0ms, infinite);
}

.animate-loading-pulse {
  @include animation(loadingPulse, 2s, in-out, 0ms, infinite);
}

// === HOVER EFFECTS ===
// تأثيرات التمرير للعناصر التفاعلية

.hover-scale {
  @include transition(transform, fast, out);
  
  &:hover {
    transform: scale(1.05);
  }
}

.hover-scale-down {
  @include transition(transform, fast, out);
  
  &:hover {
    transform: scale(0.95);
  }
}

.hover-lift {
  @include transition((transform, box-shadow), normal, out);
  
  &:hover {
    transform: translateY(-2px);
    box-shadow: var(--elevation-3);
  }
}

.hover-glow {
  @include transition(box-shadow, normal, out);
  
  &:hover {
    box-shadow: var(--glow-primary);
  }
}

.hover-fade {
  @include transition(opacity, fast, out);
  
  &:hover {
    opacity: 0.8;
  }
}

.hover-rotate {
  @include transition(transform, normal, out);
  
  &:hover {
    transform: rotate(5deg);
  }
}

// === COMPONENT-SPECIFIC ANIMATIONS ===
// حركات مخصصة للمكونات

// Button animations
.btn-animate {
  @include transition((background-color, border-color, color, transform, box-shadow), fast, out);
  
  &:hover {
    transform: translateY(-1px);
    box-shadow: var(--elevation-2);
  }
  
  &:active {
    transform: translateY(0);
    box-shadow: var(--elevation-1);
  }
}

// Card animations
.card-animate {
  @include transition((transform, box-shadow), normal, out);
  
  &:hover {
    transform: translateY(-4px);
    box-shadow: var(--elevation-4);
  }
}

// Modal animations
.modal-enter {
  @include animation(scaleInCenter, normal, out);
}

.modal-leave {
  @include animation(scaleOut, fast, in);
}

// Sidebar animations
.sidebar-enter {
  @include animation(slideInLeft, normal, out);
}

.sidebar-leave {
  @include animation(slideInLeft, normal, out);
  animation-direction: reverse;
}

// Notification animations
.notification-enter {
  @include animation(slideInRight, normal, bounce);
}

.notification-leave {
  @include animation(fadeOut, fast, in);
}

// Page transition animations
.page-enter {
  @include animation(fadeInUp, normal, out);
}

.page-leave {
  @include animation(fadeOut, fast, in);
}

// === PERFORMANCE OPTIMIZATIONS ===
// تحسينات الأداء للحركات

// تفعيل تسريع الأجهزة للعناصر المتحركة
.gpu-accelerated {
  transform: translateZ(0);
  backface-visibility: hidden;
  perspective: 1000px;
}

// تقليل تأثير الحركات للمستخدمين الذين يفضلون تقليل الحركة
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
  
  .animate-spin,
  .animate-pulse,
  .animate-heartbeat,
  .animate-loading,
  .animate-loading-dots,
  .animate-loading-pulse {
    animation: none !important;
  }
}

// === RTL SUPPORT ===
// دعم التوجه من اليمين لليسار

[dir="rtl"] {
  .animate-slide-in-left {
    @include animation(slideInRight, normal, out);
  }
  
  .animate-slide-in-right {
    @include animation(slideInLeft, normal, out);
  }
  
  .animate-fade-in-left {
    @include animation(fadeInRight, normal, out);
  }
  
  .animate-fade-in-right {
    @include animation(fadeInLeft, normal, out);
  }
  
  .sidebar-enter {
    @include animation(slideInRight, normal, out);
  }
} 