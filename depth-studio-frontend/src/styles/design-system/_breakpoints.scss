/**
 * ==============================================
 * DEPTH STUDIO DESIGN SYSTEM - BREAKPOINTS
 * ==============================================
 * نظام نقاط التجاوب المتقدم يشمل:
 * - نقاط تجاوب دقيقة لجميع الأجهزة
 * - أحجام حاويات متجاوبة
 * - دوال وخلطات للاستخدام السهل
 * - دعم Mobile-First Strategy
 */

// === ROOT BREAKPOINT VARIABLES ===
:root {
  // === DEVICE BREAKPOINTS ===
  // نقاط تجاوب دقيقة لجميع أنواع الأجهزة
  
  // Extra Small - الهواتف الذكية الصغيرة
  --breakpoint-xs: 320px;    // iPhone SE, Galaxy S5
  
  // Small - الهواتف الذكية العادية  
  --breakpoint-sm: 375px;    // iPhone 12/13/14 Mini
  
  // Medium Small - الهواتف الذكية الكبيرة
  --breakpoint-md-sm: 428px; // iPhone 12/13/14 Pro Max
  
  // Medium - الأجهزة اللوحية الصغيرة والهواتف الكبيرة بوضعية أفقية
  --breakpoint-md: 768px;    // iPad Mini, landscape phones
  
  // Large - الأجهزة اللوحية الكبيرة
  --breakpoint-lg: 1024px;   // iPad Pro
  
  // Extra Large - أجهزة اللابتوب الصغيرة
  --breakpoint-xl: 1280px;   // MacBook Air, small laptops
  
  // 2X Large - أجهزة اللابتوب الكبيرة
  --breakpoint-2xl: 1440px;  // MacBook Pro 14", medium laptops
  
  // 3X Large - شاشات الديسكتوب
  --breakpoint-3xl: 1920px;  // Full HD Monitors
  
  // 4X Large - الشاشات فائقة الدقة
  --breakpoint-4xl: 2560px;  // 4K Monitors
  
  // 5X Large - الشاشات فائقة الدقة الكبيرة
  --breakpoint-5xl: 3440px;  // Ultrawide monitors

  // === CONTAINER MAX WIDTHS ===
  // أعراض الحاويات المتجاوبة
  --container-xs: 100%;           // Full width on XS
  --container-sm: 540px;          // 540px on SM+
  --container-md: 720px;          // 720px on MD+
  --container-lg: 960px;          // 960px on LG+
  --container-xl: 1140px;         // 1140px on XL+
  --container-2xl: 1320px;        // 1320px on 2XL+
  --container-3xl: 1500px;        // 1500px on 3XL+
  --container-4xl: 1800px;        // 1800px on 4XL+
  --container-5xl: 2200px;        // 2200px on 5XL+

  // === GRID COLUMNS ===
  // عدد الأعمدة للشبكة في كل نقطة تجاوب
  --grid-columns-xs: 1;          // عمود واحد على الهواتف الصغيرة
  --grid-columns-sm: 2;          // عمودين على الهواتف العادية
  --grid-columns-md: 3;          // ثلاثة أعمدة على التابلت
  --grid-columns-lg: 4;          // أربعة أعمدة على اللابتوب
  --grid-columns-xl: 6;          // ستة أعمدة على الديسكتوب
  --grid-columns-2xl: 8;         // ثمانية أعمدة على الشاشات الكبيرة

  // === SPACING SCALES ===
  // مقاييس المسافات المتجاوبة
  --spacing-scale-xs: 0.75;      // تقليل المسافات على الهواتف الصغيرة
  --spacing-scale-sm: 0.875;     // تقليل طفيف على الهواتف العادية
  --spacing-scale-md: 1;         // المسافات العادية على التابلت
  --spacing-scale-lg: 1.125;     // زيادة طفيفة على اللابتوب
  --spacing-scale-xl: 1.25;      // زيادة على الديسكتوب
  --spacing-scale-2xl: 1.5;      // زيادة كبيرة على الشاشات الكبيرة
}

// === SCSS BREAKPOINT VARIABLES ===
// متغيرات SCSS للاستخدام في الـ Mixins

$breakpoints: (
  xs: 320px,    // Extra Small
  sm: 375px,    // Small  
  md-sm: 428px, // Medium Small
  md: 768px,    // Medium
  lg: 1024px,   // Large
  xl: 1280px,   // Extra Large
  2xl: 1440px,  // 2X Large
  3xl: 1920px,  // 3X Large
  4xl: 2560px,  // 4X Large
  5xl: 3440px   // 5X Large
) !default;

// Container max widths for each breakpoint
$container-max-widths: (
  xs: 100%,
  sm: 540px,
  md: 720px,
  lg: 960px,
  xl: 1140px,
  2xl: 1320px,
  3xl: 1500px,
  4xl: 1800px,
  5xl: 2200px
) !default;

// Grid columns for each breakpoint
$grid-columns: (
  xs: 1,
  sm: 2,
  md: 3,
  lg: 4,
  xl: 6,
  2xl: 8
) !default;

// === BREAKPOINT MIXINS ===
// خلطات للاستخدام السهل مع نقاط التجاوب

// Min-width media query (Mobile First)
@mixin breakpoint-up($name) {
  $min: map-get($breakpoints, $name);
  
  @if $min {
    @media (min-width: $min) {
      @content;
    }
  } @else {
    @warn "Breakpoint `#{$name}` not found in $breakpoints.";
  }
}

// Max-width media query (Desktop First)
@mixin breakpoint-down($name) {
  $max: map-get($breakpoints, $name);
  
  @if $max {
    @media (max-width: ($max - 1px)) {
      @content;
    }
  } @else {
    @warn "Breakpoint `#{$name}` not found in $breakpoints.";
  }
}

// Between two breakpoints
@mixin breakpoint-between($lower, $upper) {
  $min: map-get($breakpoints, $lower);
  $max: map-get($breakpoints, $upper);
  
  @if $min and $max {
    @media (min-width: $min) and (max-width: ($max - 1px)) {
      @content;
    }
  } @else {
    @warn "Breakpoint `#{$lower}` or `#{$upper}` not found in $breakpoints.";
  }
}

// Only for specific breakpoint
@mixin breakpoint-only($name) {
  $breakpoint-names: map-keys($breakpoints);
  $index: index($breakpoint-names, $name);
  
  @if $index {
    @if $index < length($breakpoint-names) {
      $next-breakpoint: nth($breakpoint-names, $index + 1);
      @include breakpoint-between($name, $next-breakpoint) {
        @content;
      }
    } @else {
      @include breakpoint-up($name) {
        @content;
      }
    }
  } @else {
    @warn "Breakpoint `#{$name}` not found in $breakpoints.";
  }
}

// === CONTAINER MIXIN ===
// خلطة إنشاء الحاويات المتجاوبة

@mixin make-container($max-widths: $container-max-widths, $padding-x: var(--spacing-4)) {
  width: 100%;
  padding-inline-start: $padding-x;
  padding-inline-end: $padding-x;
  margin-inline-start: auto;
  margin-inline-end: auto;

  @each $breakpoint, $container-max-width in $max-widths {
    @include breakpoint-up($breakpoint) {
      max-width: $container-max-width;
    }
  }
}

// === GRID SYSTEM MIXINS ===
// خلطات نظام الشبكة المتجاوب

// Make responsive grid
@mixin make-grid($columns: $grid-columns, $gap: var(--spacing-4)) {
  display: grid;
  gap: $gap;
  width: 100%;

  @each $breakpoint, $column-count in $columns {
    @include breakpoint-up($breakpoint) {
      grid-template-columns: repeat($column-count, 1fr);
    }
  }
}

// Make responsive flex grid
@mixin make-flex-grid($items-per-row: $grid-columns, $gap: var(--spacing-4)) {
  display: flex;
  flex-wrap: wrap;
  gap: $gap;

  > * {
    @each $breakpoint, $items in $items-per-row {
      @include breakpoint-up($breakpoint) {
        flex: 0 0 calc((100% - #{$gap} * (#{$items} - 1)) / #{$items});
        max-width: calc((100% - #{$gap} * (#{$items} - 1)) / #{$items});
      }
    }
  }
}

// === SPACING MIXIN ===
// خلطة المسافات المتجاوبة

@mixin responsive-spacing($property, $size-map) {
  @each $breakpoint, $size in $size-map {
    @include breakpoint-up($breakpoint) {
      #{$property}: $size;
    }
  }
}

// === FONT SIZE MIXIN ===
// خلطة أحجام الخطوط المتجاوبة

@mixin responsive-font-size($size-map) {
  @each $breakpoint, $size in $size-map {
    @include breakpoint-up($breakpoint) {
      font-size: $size;
    }
  }
}

// === UTILITY CLASSES ===
// فئات مساعدة للتجاوب

// Container classes
.container {
  @include make-container();
}

.container-fluid {
  width: 100%;
  padding-inline-start: var(--spacing-4);
  padding-inline-end: var(--spacing-4);
}

// Grid classes
.grid {
  @include make-grid();
}

.grid-auto {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: var(--spacing-4);
}

.grid-auto-sm {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: var(--spacing-3);
}

.grid-auto-lg {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: var(--spacing-6);
}

// Responsive visibility classes
.hidden {
  display: none !important;
}

.hidden-xs {
  @include breakpoint-down(sm) {
    display: none !important;
  }
}

.hidden-sm {
  @include breakpoint-between(sm, md) {
    display: none !important;
  }
}

.hidden-md {
  @include breakpoint-between(md, lg) {
    display: none !important;
  }
}

.hidden-lg {
  @include breakpoint-between(lg, xl) {
    display: none !important;
  }
}

.hidden-xl {
  @include breakpoint-up(xl) {
    display: none !important;
  }
}

.visible-xs {
  @include breakpoint-up(sm) {
    display: none !important;
  }
}

.visible-sm {
  display: none !important;
  
  @include breakpoint-between(sm, md) {
    display: block !important;
  }
}

.visible-md {
  display: none !important;
  
  @include breakpoint-between(md, lg) {
    display: block !important;
  }
}

.visible-lg {
  display: none !important;
  
  @include breakpoint-between(lg, xl) {
    display: block !important;
  }
}

.visible-xl {
  display: none !important;
  
  @include breakpoint-up(xl) {
    display: block !important;
  }
}

// === ASPECT RATIO UTILITIES ===
// فئات نسب العرض إلى الارتفاع

.aspect-square {
  aspect-ratio: 1 / 1;
}

.aspect-video {
  aspect-ratio: 16 / 9;
}

.aspect-photo {
  aspect-ratio: 4 / 3;
}

.aspect-portrait {
  aspect-ratio: 3 / 4;
}

.aspect-wide {
  aspect-ratio: 21 / 9;
}

// === RESPONSIVE DISPLAY UTILITIES ===
// فئات العرض المتجاوبة

@each $breakpoint in map-keys($breakpoints) {
  @include breakpoint-up($breakpoint) {
    .d-#{$breakpoint}-none { display: none !important; }
    .d-#{$breakpoint}-inline { display: inline !important; }
    .d-#{$breakpoint}-inline-block { display: inline-block !important; }
    .d-#{$breakpoint}-block { display: block !important; }
    .d-#{$breakpoint}-flex { display: flex !important; }
    .d-#{$breakpoint}-inline-flex { display: inline-flex !important; }
    .d-#{$breakpoint}-grid { display: grid !important; }
    .d-#{$breakpoint}-inline-grid { display: inline-grid !important; }
  }
}

// === RESPONSIVE FLEX UTILITIES ===
// فئات الفلكس المتجاوبة

@each $breakpoint in map-keys($breakpoints) {
  @include breakpoint-up($breakpoint) {
    .flex-#{$breakpoint}-row { flex-direction: row !important; }
    .flex-#{$breakpoint}-column { flex-direction: column !important; }
    .flex-#{$breakpoint}-row-reverse { flex-direction: row-reverse !important; }
    .flex-#{$breakpoint}-column-reverse { flex-direction: column-reverse !important; }
    
    .flex-#{$breakpoint}-wrap { flex-wrap: wrap !important; }
    .flex-#{$breakpoint}-nowrap { flex-wrap: nowrap !important; }
    .flex-#{$breakpoint}-wrap-reverse { flex-wrap: wrap-reverse !important; }
    
    .justify-#{$breakpoint}-start { justify-content: flex-start !important; }
    .justify-#{$breakpoint}-end { justify-content: flex-end !important; }
    .justify-#{$breakpoint}-center { justify-content: center !important; }
    .justify-#{$breakpoint}-between { justify-content: space-between !important; }
    .justify-#{$breakpoint}-around { justify-content: space-around !important; }
    .justify-#{$breakpoint}-evenly { justify-content: space-evenly !important; }
    
    .align-#{$breakpoint}-start { align-items: flex-start !important; }
    .align-#{$breakpoint}-end { align-items: flex-end !important; }
    .align-#{$breakpoint}-center { align-items: center !important; }
    .align-#{$breakpoint}-baseline { align-items: baseline !important; }
    .align-#{$breakpoint}-stretch { align-items: stretch !important; }
  }
}

// === RESPONSIVE TEXT ALIGNMENT ===
// فئات محاذاة النص المتجاوبة

@each $breakpoint in map-keys($breakpoints) {
  @include breakpoint-up($breakpoint) {
    .text-#{$breakpoint}-start { text-align: var(--start) !important; }
    .text-#{$breakpoint}-end { text-align: var(--end) !important; }
    .text-#{$breakpoint}-center { text-align: center !important; }
    .text-#{$breakpoint}-justify { text-align: justify !important; }
  }
} 