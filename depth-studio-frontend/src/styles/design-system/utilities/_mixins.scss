/**
 * ==============================================
 * DEPTH STUDIO DESIGN SYSTEM - MIXINS & UTILITIES
 * ==============================================
 * مجموعة شاملة من الخلطات (Mixins) المساعدة لتسريع التطوير
 * وضمان الاتساق عبر التطبيق
 * 
 * تشمل:
 * - خلطات التخطيط (Layout)
 * - خلطات التجاوب (Responsive)
 * - خلطات الخطوط (Typography)
 * - خلطات العمق والظلال (Elevation)
 * - خلطات الحالات (States)
 */

// === IMPORT DEPENDENCIES ===
// استيراد المتغيرات المطلوبة
@import '../variables';
@import '../colors';
@import '../typography';
@import '../breakpoints';
@import '../elevation';

// === LAYOUT MIXINS ===
// خلطات التخطيط والمواضع

// Flexbox utilities
@mixin flex($direction: row, $wrap: nowrap, $justify: flex-start, $align: stretch) {
  display: flex;
  flex-direction: $direction;
  flex-wrap: $wrap;
  justify-content: $justify;
  align-items: $align;
}

@mixin flex-center {
  @include flex(row, nowrap, center, center);
}

@mixin flex-between {
  @include flex(row, nowrap, space-between, center);
}

@mixin flex-around {
  @include flex(row, nowrap, space-around, center);
}

@mixin flex-column-center {
  @include flex(column, nowrap, center, center);
}

@mixin flex-column-start {
  @include flex(column, nowrap, flex-start, stretch);
}

// Grid utilities
@mixin grid($columns: auto, $rows: auto, $gap: var(--spacing-4)) {
  display: grid;
  grid-template-columns: $columns;
  grid-template-rows: $rows;
  gap: $gap;
}

@mixin grid-auto-fill($min-width: 250px, $gap: var(--spacing-4)) {
  @include grid(repeat(auto-fill, minmax($min-width, 1fr)), auto, $gap);
}

@mixin grid-auto-fit($min-width: 250px, $gap: var(--spacing-4)) {
  @include grid(repeat(auto-fit, minmax($min-width, 1fr)), auto, $gap);
}

// Positioning
@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin absolute-fill {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

@mixin fixed-center {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin sticky-top($offset: 0) {
  position: sticky;
  top: $offset;
  z-index: var(--z-sticky);
}

// Size utilities
@mixin size($width, $height: $width) {
  width: $width;
  height: $height;
}

@mixin min-size($width, $height: $width) {
  min-width: $width;
  min-height: $height;
}

@mixin max-size($width, $height: $width) {
  max-width: $width;
  max-height: $height;
}

@mixin square($size) {
  @include size($size);
}

@mixin circle($size) {
  @include size($size);
  border-radius: 50%;
}

// === RESPONSIVE MIXINS ===
// خلطات التجاوب

// Media query helpers
@mixin mobile-only {
  @media (max-width: #{map-get($grid-breakpoints, sm) - 1px}) {
    @content;
  }
}

@mixin tablet-and-up {
  @media (min-width: #{map-get($grid-breakpoints, md)}) {
    @content;
  }
}

@mixin desktop-and-up {
  @media (min-width: #{map-get($grid-breakpoints, lg)}) {
    @content;
  }
}

@mixin large-desktop-and-up {
  @media (min-width: #{map-get($grid-breakpoints, xl)}) {
    @content;
  }
}

@mixin between-breakpoints($min, $max) {
  @media (min-width: #{map-get($grid-breakpoints, $min)}) and (max-width: #{map-get($grid-breakpoints, $max) - 1px}) {
    @content;
  }
}

// Responsive spacing
@mixin responsive-spacing($property, $mobile, $tablet: $mobile, $desktop: $tablet) {
  #{$property}: $mobile;
  
  @include tablet-and-up {
    #{$property}: $tablet;
  }
  
  @include desktop-and-up {
    #{$property}: $desktop;
  }
}

@mixin responsive-padding($mobile, $tablet: $mobile, $desktop: $tablet) {
  @include responsive-spacing(padding, $mobile, $tablet, $desktop);
}

@mixin responsive-margin($mobile, $tablet: $mobile, $desktop: $tablet) {
  @include responsive-spacing(margin, $mobile, $tablet, $desktop);
}

// Responsive typography
@mixin responsive-font-size($mobile, $tablet: $mobile, $desktop: $tablet) {
  @include responsive-spacing(font-size, $mobile, $tablet, $desktop);
}

// Container with responsive max-width
@mixin container($padding: var(--spacing-4)) {
  width: 100%;
  max-width: var(--container-max-width);
  margin: 0 auto;
  padding-left: $padding;
  padding-right: $padding;
}

// === TYPOGRAPHY MIXINS ===
// خلطات الخطوط والنصوص

// Font weight utilities
@mixin font-weight($weight) {
  font-weight: map-get($font-weights, $weight);
}

// Typography scale
@mixin typography-scale($scale) {
  @if map-has-key($typography-scale, $scale) {
    $props: map-get($typography-scale, $scale);
    font-size: map-get($props, 'font-size');
    line-height: map-get($props, 'line-height');
    
    @if map-has-key($props, 'font-weight') {
      font-weight: map-get($props, 'font-weight');
    }
    
    @if map-has-key($props, 'letter-spacing') {
      letter-spacing: map-get($props, 'letter-spacing');
    }
  }
}

// Text utilities
@mixin text-truncate {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

@mixin text-line-clamp($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin text-gradient($gradient) {
  background: $gradient;
  background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}

// === COMPONENT MIXINS ===
// خلطات للمكونات

// Button states
@mixin button-variant($bg-color, $text-color: white, $border-color: $bg-color) {
  background-color: $bg-color;
  color: $text-color;
  border-color: $border-color;
  
  &:hover {
    background-color: color-mix(in srgb, $bg-color 90%, black);
    border-color: color-mix(in srgb, $border-color 90%, black);
  }
  
  &:active {
    background-color: color-mix(in srgb, $bg-color 85%, black);
    border-color: color-mix(in srgb, $border-color 85%, black);
  }
  
  &:focus {
    box-shadow: 0 0 0 2px color-mix(in srgb, $bg-color 30%, transparent);
  }
  
  &:disabled {
    background-color: color-mix(in srgb, $bg-color 60%, transparent);
    color: color-mix(in srgb, $text-color 60%, transparent);
    border-color: color-mix(in srgb, $border-color 60%, transparent);
    cursor: not-allowed;
  }
}

@mixin button-size($padding-y, $padding-x, $font-size, $border-radius: var(--border-radius)) {
  padding: $padding-y $padding-x;
  font-size: $font-size;
  border-radius: $border-radius;
}

// Card component
@mixin card-variant($bg: var(--color-surface), $border: var(--border-color), $shadow: var(--elevation-1)) {
  background-color: $bg;
  border: 1px solid $border;
  border-radius: var(--border-radius-lg);
  box-shadow: $shadow;
  overflow: hidden;
}

// Form control states
@mixin form-control-variant($border-color: var(--border-color), $focus-color: var(--color-primary)) {
  border: 1px solid $border-color;
  border-radius: var(--border-radius);
  transition: border-color var(--duration-fast) var(--ease-out);
  
  &:focus {
    outline: none;
    border-color: $focus-color;
    box-shadow: 0 0 0 2px color-mix(in srgb, $focus-color 20%, transparent);
  }
  
  &:invalid {
    border-color: var(--color-error);
    
    &:focus {
      box-shadow: 0 0 0 2px color-mix(in srgb, var(--color-error) 20%, transparent);
    }
  }
  
  &:disabled {
    background-color: var(--color-surface-muted);
    color: var(--color-text-muted);
    cursor: not-allowed;
  }
}

// === VISUAL EFFECTS MIXINS ===
// خلطات المؤثرات البصرية

// Shadows and elevation
@mixin elevation($level) {
  box-shadow: var(--elevation-#{$level});
}

@mixin hover-elevation($level) {
  transition: box-shadow var(--duration-normal) var(--ease-out);
  
  &:hover {
    @include elevation($level);
  }
}

// Overlay
@mixin overlay($color: rgba(0, 0, 0, 0.5), $z-index: var(--z-overlay)) {
  @include absolute-fill;
  background-color: $color;
  z-index: $z-index;
}

// Backdrop blur
@mixin backdrop-blur($blur: 10px) {
  backdrop-filter: blur($blur);
  -webkit-backdrop-filter: blur($blur);
}

// Glass effect
@mixin glass-effect($bg: rgba(255, 255, 255, 0.1), $blur: 10px, $border: rgba(255, 255, 255, 0.2)) {
  background: $bg;
  @include backdrop-blur($blur);
  border: 1px solid $border;
  border-radius: var(--border-radius-lg);
}

// Gradient utilities
@mixin linear-gradient($direction, $colors...) {
  background: linear-gradient($direction, $colors);
}

@mixin radial-gradient($shape, $colors...) {
  background: radial-gradient($shape, $colors);
}

// === ANIMATION MIXINS ===
// خلطات الحركات (بربط مع _animations.scss)

// Loading spinner
@mixin loading-spinner($size: 24px, $border-width: 2px, $color: var(--color-primary)) {
  @include size($size);
  border: $border-width solid color-mix(in srgb, $color 20%, transparent);
  border-top-color: $color;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

// Pulse effect
@mixin pulse-effect($scale: 1.05, $duration: 2s) {
  animation: pulse $duration ease-in-out infinite;
  
  @keyframes pulse {
    0%, 100% {
      transform: scale(1);
    }
    50% {
      transform: scale($scale);
    }
  }
}

// === UTILITY HELPERS ===
// مساعدات للحالات المختلفة

// Clearfix for older browsers
@mixin clearfix {
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}

// Screen reader only
@mixin sr-only {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  margin: -1px !important;
  overflow: hidden !important;
  clip: rect(0, 0, 0, 0) !important;
  white-space: nowrap !important;
  border: 0 !important;
}

// Focus styles
@mixin focus-outline($color: var(--color-primary), $width: 2px) {
  outline: $width solid $color;
  outline-offset: 2px;
}

@mixin focus-ring($color: var(--color-primary)) {
  box-shadow: 0 0 0 2px color-mix(in srgb, $color 30%, transparent);
}

// === LIST UTILITIES ===
// مساعدات القوائم

@mixin list-reset {
  list-style: none;
  padding: 0;
  margin: 0;
}

@mixin list-inline {
  @include list-reset;
  
  li {
    display: inline-block;
  }
}

@mixin list-spaced($spacing: var(--spacing-2)) {
  li + li {
    margin-top: $spacing;
  }
}

// === TABLE UTILITIES ===
// مساعدات الجداول

@mixin table-responsive {
  overflow-x: auto;
  -webkit-overflow-scrolling: touch;
}

@mixin table-striped($odd-bg: var(--color-surface), $even-bg: var(--color-surface-alt)) {
  tr:nth-child(odd) {
    background-color: $odd-bg;
  }
  
  tr:nth-child(even) {
    background-color: $even-bg;
  }
}

@mixin table-hover($hover-bg: var(--color-surface-hover)) {
  tbody tr {
    transition: background-color var(--duration-fast) var(--ease-out);
    
    &:hover {
      background-color: $hover-bg;
    }
  }
}

// === FORM UTILITIES ===
// مساعدات النماذج

@mixin form-group-spacing($spacing: var(--spacing-4)) {
  & + & {
    margin-top: $spacing;
  }
}

@mixin input-with-icon($icon-size: 20px, $padding: var(--spacing-3)) {
  position: relative;
  
  .form-control {
    padding-left: calc(#{$icon-size} + #{$padding} * 2);
  }
  
  .input-icon {
    position: absolute;
    left: $padding;
    top: 50%;
    transform: translateY(-50%);
    width: $icon-size;
    height: $icon-size;
    color: var(--color-text-muted);
  }
}

// === PRINT UTILITIES ===
// مساعدات الطباعة

@mixin print-only {
  @media print {
    @content;
  }
}

@mixin no-print {
  @media print {
    display: none !important;
  }
}

@mixin print-break-inside-avoid {
  @include print-only {
    break-inside: avoid;
    page-break-inside: avoid;
  }
}

// === COLOR UTILITIES ===
// مساعدات الألوان

@mixin color-variant($color) {
  --color-variant-50: #{color-mix(in srgb, $color 5%, var(--color-surface))};
  --color-variant-100: #{color-mix(in srgb, $color 10%, var(--color-surface))};
  --color-variant-200: #{color-mix(in srgb, $color 20%, var(--color-surface))};
  --color-variant-300: #{color-mix(in srgb, $color 30%, var(--color-surface))};
  --color-variant-400: #{color-mix(in srgb, $color 40%, var(--color-surface))};
  --color-variant-500: #{$color};
  --color-variant-600: #{color-mix(in srgb, $color 90%, black)};
  --color-variant-700: #{color-mix(in srgb, $color 80%, black)};
  --color-variant-800: #{color-mix(in srgb, $color 70%, black)};
  --color-variant-900: #{color-mix(in srgb, $color 60%, black)};
}

// === VALIDATION ===
// فحص ما إذا كانت المتغيرات متوفرة

@function check-breakpoint($breakpoint) {
  @if not map-has-key($grid-breakpoints, $breakpoint) {
    @error "Unknown breakpoint `#{$breakpoint}`. Available breakpoints: #{map-keys($grid-breakpoints)}";
  }
  @return map-get($grid-breakpoints, $breakpoint);
}

@function check-spacing($spacing) {
  @if not map-has-key($spacers, $spacing) {
    @error "Unknown spacing `#{$spacing}`. Available spacings: #{map-keys($spacers)}";
  }
  @return map-get($spacers, $spacing);
} 