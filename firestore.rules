rules_version = '2';

// 🔒 قواعد أمان Firestore شاملة ومحكمة - Depth Studio
// 📅 تم إنشاؤها: 31 مايو 2025
// 👤 المسؤول: علي جودت
// 🎯 الهدف: استبدال القواعد المؤقتة قبل 28 يونيو 2025

service cloud.firestore {
  match /databases/{database}/documents {
    
    // ==========================================
    // 🌱 TEMPORARY SEEDING RULES (قواعد الزراعة المؤقتة)
    // ==========================================
    // السماح بالكتابة للمجموعات الأساسية بدون مصادقة للزراعة الأولية فقط
    match /roles/{document} {
      allow read, write: if true;
    }
    match /templates/{document} {
      allow read, write: if true;
    }
    match /content/{document} {
      allow read, write: if true;
    }
    match /campaigns/{document} {
      allow read, write: if true;
    }
    match /settings/{document} {
      allow read, write: if true;
    }
    match /notifications/{document} {
      allow read, write: if true;
    }
    match /users/{document} {
      allow read, write: if true;
    }
    match /user_permissions/{document} {
      allow read, write: if true;
    }
    match /brands/{document} {
      allow read, write: if true;
    }
    match /brand_coordinators/{document} {
      allow read, write: if true;
    }
    match /photographer_profiles/{document} {
      allow read, write: if true;
    }
    match /content_categories/{document} {
      allow read, write: if true;
    }
    match /equipment/{document} {
      allow read, write: if true;
    }
    
    // ==========================================
    // 🛠️ HELPER FUNCTIONS (دوال مساعدة)
    // ==========================================
    
    // التحقق من تسجيل الدخول
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // التحقق من ملكية المستخدم
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // التحقق من صلاحية Super Admin
    function isSuperAdmin() {
      return isAuthenticated() && 
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.primary_role == 'super_admin';
    }
    
    // التحقق من صلاحية Marketing Coordinator
    function isMarketingCoordinator() {
      return isAuthenticated() && 
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.primary_role == 'marketing_coordinator';
    }
    
    // التحقق من صلاحية Brand Coordinator
    function isBrandCoordinator() {
      return isAuthenticated() && 
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.primary_role == 'brand_coordinator';
    }
    
    // التحقق من صلاحية Photographer
    function isPhotographer() {
      return isAuthenticated() && 
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.primary_role == 'photographer';
    }
    
    // التحقق من الصلاحيات الإدارية (Super Admin أو Marketing Coordinator)
    function hasAdminAccess() {
      return isSuperAdmin() || isMarketingCoordinator();
    }
    
    // التحقق من صلاحية محددة في user_permissions
    function hasPermission(permissionType, action) {
      return isAuthenticated() && 
             exists(/databases/$(database)/documents/user_permissions/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/user_permissions/$(request.auth.uid)).data.crud_permissions[permissionType][action] == true;
    }
    
    // التحقق من الوصول لبراند محدد
    function hasBrandAccess(brandId) {
      return isSuperAdmin() || 
             (isBrandCoordinator() && 
              exists(/databases/$(database)/documents/brand_coordinators/$(request.auth.uid)) &&
              get(/databases/$(database)/documents/brand_coordinators/$(request.auth.uid)).data.brand_id == brandId) ||
             hasAdminAccess();
    }
    
    // ==========================================
    // 👥 USERS COLLECTION (المستخدمين)
    // ==========================================
    match /users/{userId} {
      // القراءة: المستخدم نفسه أو المدراء
      allow read: if isOwner(userId) || hasAdminAccess() || hasPermission('users', 'read');
      
      // الإنشاء: Super Admin أو التسجيل الذاتي للمستخدمين الجدد
      // 🔥 حل المشكلة: السماح للمستخدمين الجدد بإنشاء ملفاتهم
      allow create: if isSuperAdmin() || 
                       (isOwner(userId) && request.auth.uid == userId) ||
                       // شرط خاص للمستخدمين الجدد أثناء التسجيل
                       (request.auth != null && 
                        request.auth.uid == userId &&
                        (request.resource.data.primary_role == 'new_user' || 
                         request.resource.data.primary_role == 'photographer') && // مؤقت للتوافق
                        request.resource.data.firebase_uid == request.auth.uid);
      
      // التحديث: المستخدم نفسه لبياناته الأساسية، أو Super Admin للكل
      // 🔥 تحديث جديد: السماح للمستخدمين الجدد بتحديث دورهم مرة واحدة
      allow update: if (isOwner(userId) && (
                        // المستخدم العادي - لا يمكنه تحديث الدور والUID
                        (!("primary_role" in request.resource.data.diff(resource.data).changedKeys()) &&
                         !("firebase_uid" in request.resource.data.diff(resource.data).changedKeys())) ||
                        // المستخدم الجديد - يمكنه تحديث دوره مرة واحدة فقط إذا كان new_user
                        (resource.data.primary_role == 'new_user' && 
                         resource.data.status == 'pending_role_setup' &&
                         request.resource.data.primary_role in ['photographer', 'brand_coordinator', 'marketing_coordinator'] &&
                         request.resource.data.status in ['pending_approval'])
                      )) ||
                       isSuperAdmin() ||
                       hasPermission('users', 'update');
      
      // الحذف: Super Admin فقط
      allow delete: if isSuperAdmin() || hasPermission('users', 'delete');
    }
    
    // ==========================================
    // 🔐 USER_PERMISSIONS COLLECTION (الصلاحيات)
    // ==========================================
    match /user_permissions/{userId} {
      // القراءة: المستخدم نفسه أو المدراء
      allow read: if isOwner(userId) || hasAdminAccess();
      
      // الإنشاء والتحديث والحذف: Super Admin فقط
      allow create, update, delete: if isSuperAdmin();
    }
    
    // ==========================================
    // 👨‍💼 PHOTOGRAPHER_PROFILES COLLECTION (ملفات المصورين)
    // ==========================================
    match /photographer_profiles/{profileId} {
      // القراءة: المصور نفسه أو المدراء
      allow read: if get(/databases/$(database)/documents/photographer_profiles/$(profileId)).data.user_id == request.auth.uid ||
                     hasAdminAccess() ||
                     hasPermission('users', 'read');
      
      // الإنشاء: Super Admin أو المصور نفسه (لمرة واحدة)
      allow create: if (request.resource.data.user_id == request.auth.uid && isPhotographer()) ||
                       isSuperAdmin();
      
      // التحديث: المصور نفسه للبيانات غير المالية، أو المدراء للكل
      allow update: if (resource.data.user_id == request.auth.uid && 
                        // المصور لا يمكنه تعديل البيانات المالية
                        !("financial_info" in request.resource.data.diff(resource.data).changedKeys()) &&
                        !("performance_stats" in request.resource.data.diff(resource.data).changedKeys())) ||
                       hasAdminAccess();
      
      // الحذف: Super Admin فقط
      allow delete: if isSuperAdmin();
    }
    
    // ==========================================
    // 👔 BRAND_COORDINATORS COLLECTION (منسقي البراندات)
    // ==========================================
    match /brand_coordinators/{coordinatorId} {
      // القراءة: المنسق نفسه أو المدراء أو Super Admin
      allow read: if get(/databases/$(database)/documents/brand_coordinators/$(coordinatorId)).data.user_id == request.auth.uid ||
                     hasAdminAccess();
      
      // الإنشاء والتحديث والحذف: Super Admin فقط
      allow create, update, delete: if isSuperAdmin();
    }
    
    // ==========================================
    // 🏢 BRANDS COLLECTION (البراندات)
    // ==========================================
    match /brands/{brandId} {
      // القراءة: جميع المستخدمين المصرح لهم
      allow read: if isAuthenticated() && (
                     hasAdminAccess() ||
                     hasBrandAccess(brandId) ||
                     hasPermission('brands', 'read')
                  );
      
      // الإنشاء: Super Admin فقط
      allow create: if isSuperAdmin() || hasPermission('brands', 'create');
      
      // التحديث: Super Admin أو Brand Coordinator للبراند المخصص له
      allow update: if isSuperAdmin() || 
                       hasBrandAccess(brandId) ||
                       hasPermission('brands', 'update');
      
      // الحذف: Super Admin فقط
      allow delete: if isSuperAdmin() || hasPermission('brands', 'delete');
    }
    
    // ==========================================
    // 📂 CONTENT_CATEGORIES COLLECTION (الفئات)
    // ==========================================
    match /content_categories/{categoryId} {
      // القراءة: جميع المستخدمين المصرح لهم
      allow read: if isAuthenticated();
      
      // الإنشاء والتحديث والحذف: Super Admin فقط
      allow create, update, delete: if isSuperAdmin() || hasAdminAccess();
    }
    
    // ==========================================
    // 🎪 EQUIPMENT COLLECTION (المعدات)
    // ==========================================
    match /equipment/{equipmentId} {
      // القراءة: جميع المستخدمين المصرح لهم
      allow read: if isAuthenticated();
      
      // الإنشاء والتحديث: Super Admin أو Marketing Coordinator
      allow create, update: if hasAdminAccess();
      
      // الحذف: Super Admin فقط
      allow delete: if isSuperAdmin();
    }
    
    // ==========================================
    // 🎬 SMART_CAMPAIGNS COLLECTION (الحملات الذكية)
    // ==========================================
    match /smart_campaigns/{campaignId} {
      // القراءة: جميع المستخدمين المصرح لهم
      allow read: if isAuthenticated() && (
                     hasAdminAccess() ||
                     hasPermission('campaigns', 'read')
                  );
      
      // الإنشاء: Super Admin أو Marketing Coordinator
      allow create: if hasAdminAccess() || hasPermission('campaigns', 'create');
      
      // التحديث: Super Admin أو Marketing Coordinator أو Brand Coordinator للحملات التي تخص براندهم
      allow update: if hasAdminAccess() || 
                       hasPermission('campaigns', 'update') ||
                       (isBrandCoordinator() && 
                        resource.data.campaign_inputs.target_brands != null &&
                        request.auth.uid in resource.data.campaign_inputs.target_brands);
      
      // الحذف: Super Admin فقط
      allow delete: if isSuperAdmin() || hasPermission('campaigns', 'delete');
    }
    
    // ==========================================
    // 📋 CAMPAIGN_TASKS COLLECTION (مهام الحملات)
    // ==========================================
    match /campaign_tasks/{taskId} {
      // القراءة: المصور المكلف أو المدراء أو Brand Coordinator للبراند المحدد
      allow read: if isAuthenticated() && (
                     resource.data.assigned_photographer == request.auth.uid ||
                     hasAdminAccess() ||
                     hasBrandAccess(resource.data.brand_id) ||
                     hasPermission('tasks', 'read')
                  );
      
      // الإنشاء: Super Admin أو Marketing Coordinator
      allow create: if hasAdminAccess() || hasPermission('tasks', 'create');
      
      // التحديث: المصور المكلف لتحديث الحالة، أو المدراء، أو Brand Coordinator للبراند
      allow update: if (resource.data.assigned_photographer == request.auth.uid && 
                        // المصور يمكنه تحديث الحالة والملاحظات فقط
                        request.resource.data.diff(resource.data).changedKeys().hasOnly(['status', 'actual_start_time', 'actual_end_time', 'photographer_notes'])) ||
                       hasAdminAccess() ||
                       hasBrandAccess(resource.data.brand_id) ||
                       hasPermission('tasks', 'update');
      
      // الحذف: Super Admin فقط
      allow delete: if isSuperAdmin() || hasPermission('tasks', 'delete');
    }
    
    // ==========================================
    // 🔔 CAMPAIGN_NOTIFICATIONS COLLECTION (إشعارات الحملات)
    // ==========================================
    match /campaign_notifications/{notificationId} {
      // القراءة: المستقبل المحدد أو المدراء
      allow read: if isAuthenticated() && (
                     resource.data.recipient_user_id == request.auth.uid ||
                     hasAdminAccess()
                  );
      
      // الإنشاء: النظام (Super Admin) أو Marketing Coordinator
      allow create: if hasAdminAccess();
      
      // التحديث: المستقبل لتحديد القراءة، أو المدراء
      allow update: if (resource.data.recipient_user_id == request.auth.uid && 
                        request.resource.data.diff(resource.data).changedKeys().hasOnly(['is_read', 'read_at'])) ||
                       hasAdminAccess();
      
      // الحذف: Super Admin فقط
      allow delete: if isSuperAdmin();
    }
    
    // ==========================================
    // 🗂️ CONTENT COLLECTION (المحتوى المرفوع)
    // ==========================================
    match /content/{contentId} {
      // القراءة: المصور المالك أو المدراء أو Brand Coordinator للبراند المحدد
      allow read: if isAuthenticated() && (
                     resource.data.uploaded_by == request.auth.uid ||
                     hasAdminAccess() ||
                     hasBrandAccess(resource.data.brand_id) ||
                     hasPermission('content', 'read')
                  );
      
      // الإنشاء: المصور المخول أو المدراء
      allow create: if isAuthenticated() && (
                        isPhotographer() ||
                        hasAdminAccess() ||
                        hasPermission('content', 'create')
                     );
      
      // التحديث: المصور المالك للملاحظات، أو المدراء للمراجعة والموافقة
      allow update: if (resource.data.uploaded_by == request.auth.uid && 
                        request.resource.data.diff(resource.data).changedKeys().hasOnly(['photographer_notes', 'tags'])) ||
                       hasAdminAccess() ||
                       hasBrandAccess(resource.data.brand_id) ||
                       hasPermission('content', 'update');
      
      // الحذف: المصور المالك أو Super Admin
      allow delete: if resource.data.uploaded_by == request.auth.uid ||
                       isSuperAdmin() ||
                       hasPermission('content', 'delete');
    }
    
    // ==========================================
    // 💬 MESSAGES COLLECTION (الرسائل والتواصل)
    // ==========================================
    match /messages/{messageId} {
      // القراءة: المرسل أو المستقبل أو المدراء
      allow read: if isAuthenticated() && (
                     resource.data.sender_id == request.auth.uid ||
                     resource.data.recipient_id == request.auth.uid ||
                     hasAdminAccess()
                  );
      
      // الإنشاء: المستخدم المصرح له
      allow create: if isAuthenticated() && request.resource.data.sender_id == request.auth.uid;
      
      // التحديث: المستقبل لتحديد القراءة، أو المرسل للتعديل
      allow update: if (resource.data.recipient_id == request.auth.uid && 
                        request.resource.data.diff(resource.data).changedKeys().hasOnly(['is_read', 'read_at'])) ||
                       (resource.data.sender_id == request.auth.uid &&
                        request.resource.data.diff(resource.data).changedKeys().hasOnly(['message_text'])) ||
                       hasAdminAccess();
      
      // الحذف: المرسل أو Super Admin
      allow delete: if resource.data.sender_id == request.auth.uid || isSuperAdmin();
    }
    
    // ==========================================
    // 📊 REPORTS COLLECTION (التقارير)
    // ==========================================
    match /reports/{reportId} {
      // القراءة: حسب نوع التقرير والصلاحيات
      allow read: if isAuthenticated() && (
                     hasAdminAccess() ||
                     hasPermission('reports', 'read') ||
                     // Brand Coordinator يمكنه رؤية تقارير براندهم فقط
                     (isBrandCoordinator() && resource.data.brand_id != null && hasBrandAccess(resource.data.brand_id))
                  );
      
      // الإنشاء: المدراء فقط
      allow create: if hasAdminAccess() || hasPermission('reports', 'create');
      
      // التحديث والحذف: Super Admin فقط
      allow update, delete: if isSuperAdmin();
    }
    
    // ==========================================
    // ⚙️ SYSTEM_SETTINGS COLLECTION (إعدادات النظام)
    // ==========================================
    match /system_settings/{settingId} {
      // القراءة: المدراء فقط
      allow read: if hasAdminAccess();
      
      // الإنشاء والتحديث والحذف: Super Admin فقط
      allow create, update, delete: if isSuperAdmin();
    }
    
    // ==========================================
    // 🗑️ CATCH-ALL RULE (قاعدة الأمان الافتراضية)
    // ==========================================
    // رفض الوصول لأي collection غير محدد صراحة
    match /{document=**} {
      allow read, write: if false;
    }
  }
}

// ==========================================
// 📝 ملاحظات مهمة:
// ==========================================
//
// 1. هذه القواعد تدعم نظام الصلاحيات الديناميكي الكامل
// 2. Super Admin له صلاحيات كاملة على كل شيء
// 3. Marketing Coordinator له صلاحيات واسعة ولكن محدودة
// 4. Brand Coordinator مقيد ببراندهم المخصص فقط
// 5. Photographer مقيد بمهامهم ومحتواهم فقط
// 6. جميع العمليات محمية ومسجلة
// 7. لا يمكن الوصول لأي collection غير محدد
//
// ⚠️ تحذير: اختبر هذه القواعد جيداً قبل النشر في الإنتاج!
//
// 🔄 آخر تحديث: 31 مايو 2025
// 👨‍💻 المطور: علي جودت